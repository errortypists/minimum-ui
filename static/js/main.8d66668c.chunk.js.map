{"version":3,"sources":["assets/styles/color.ts","components/Layout/Contents.tsx","assets/components.ts","contexts/StatusContext.ts","hooks/useStatus.ts","lib/path.ts","components/ComponentBox/index.tsx","components/PropsBox/index.tsx","components/Icon/Menu.tsx","components/Icon/Github.tsx","components/Header/index.tsx","components/Footer/index.tsx","assets/styles/base.ts","components/Layout/index.tsx","components/Icon/Bell.tsx","components/Icon/Folder.tsx","components/Icon/Cart.tsx","pages/Tabs/index.tsx","pages/Divider/index.tsx","pages/Progress/index.tsx","pages/Modal/index.tsx","pages/Collapse/index.tsx","pages/Drawer/index.tsx","pages/Concept/index.tsx","components/Icon/ArrowLeft.tsx","components/Icon/ArrowRight.tsx","pages/Button/index.tsx","pages/Table/index.tsx","pages/QuickTable/index.tsx","pages/Select/index.tsx","pages/Pagination/index.tsx","pages/Input/index.tsx","pages/Menu/index.tsx","pages/Radio/index.tsx","pages/Checkbox/index.tsx","pages/Overview/index.tsx","pages/Grid/index.tsx","pages/Flex/index.tsx","pages/Typography/index.tsx","pages/Textarea/index.tsx","components/DrawerMenu/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Colors","GRAY","RED","PINK","GRAPE","VIOLET","INDIGO","BLUE","CYAN","TEAL","GREEN","LIME","YELLOW","ORANGE","BaseColor","border","inputBorder","default","primary","font","alert","information","background","success","warning","error","LayoutComponentTitleWrapper","styled","div","menus","tabs","displayName","props","name","type","description","progress","flex","grid","divider","typography","modal","collapse","button","textarea","drawer","table","quicktable","select","pagination","input","menu","radio","checkbox","StatusContext","React","createContext","selectedMenu","id","url","isLeftMenu","setSelectedMenu","setLeftMenu","useStatus","useContext","replacePathname","pathname","replace","sortedComponents","names","Object","keys","components","sort","newComponentSet","forEach","BoxWrapper","Link","Color","ComponentBox","useState","window","innerWidth","width","setWidth","useEffect","updateWindowDimensions","currentWidth","addEventListener","removeEventListener","gap","col","style","marginBottom","map","menuName","index","isSelected","console","log","to","onClick","PropsTypeBox","span","PropsBox","hasTitle","urlRemoveName","toLocaleLowerCase","hasPropsTable","direction","align","ComponentTitle","overflowX","minWidth","ratio","header","data","customRow","item","arr","_","Fragment","length","Menu","fill","height","viewBox","xmlns","transform","opacity","x","y","rx","ry","Github","d","MenuIconWrapper","GithubIconWrapper","Wrapper","Logo","Header","history","useHistory","push","footer","Footer","href","target","rel","BaseStyle","padding","boxHeight","radius","space","disabledOpacity","containerPadding","fontSize","MainLayout","LeftWrapper","LeftAreaWrapper","Title","LeftAreaPropsWrapper","RightAreaWrapper","RightWrapper","children","ComponentWrapper","RightContentWrapper","Layout","CodeWrapper","code","language","text","theme","hopscotch","wrapLines","codeBlock","showLineNumbers","customStyle","paddingBottom","margin","borderRadius","ContentsLayout","Typography","Description","Body","SubTitle","ComponentDescription","Bell","Folder","Cart","cx","cy","r","TabsPage","tab1List","value","status","tab1Value","setTab1Value","tab2Value","setTab2Value","tab2List","icon","tab3List","justify","headers","onChange","DividerPage","size","color","ProgressPage","bgColor","speed","ModalPage","isOpen","setOpen","variant","display","justifyContent","onClickOutside","CollapseOne","CollapseTwo","CollapsePage","open1","setOpen1","open2","setOpen2","open3","setOpen3","open","DrawerPage","openLeft","setOpenLeft","openRight","setOpenRight","openTop","setOpenTop","openBottom","setOpenBottom","openFull","setOpenFull","open320","setOpen320","openDefault","setOpenDefault","document","querySelector","clientWidth","Box","AlertBox","Concept","boxSizing","wrap","disabled","row","ArrowLeft","xmlnsXlink","xmlSpace","ArrowRight","ButtonPage","loading","leftIcon","rightIcon","TablePage","Head","Row","Cell","QuickTablePage","phone","address","customHeader","backgroundColor","SelectPage","options","PaginationPage","currentPage","pageSize","page","customButtons","InputPage","setId","password","setPassword","placeholder","title","MenuPage","Item","selected","Group","RadioPage","checked","CheckboxPage","LogoWrapper","BoardWrapper","Brand","BrandDescription","ComponentName","OverviewPage","userSelect","fontWeight","GridPage","FlexPage","Caption","LayoutTitle","TypographyPage","textDecoration","letterSpacing","TextareaPage","cols","rows","StyledLink","listen","path","location","slice","App","Provider","basename","exact","Overview","Tabs","Progress","Divider","Flex","Grid","Modal","Collapse","Button","Textarea","Drawer","Table","QuickTable","Select","Pagination","Input","Radio","Checkbox","DrawerMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+TAAMA,EAAS,CACbC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,IAAK,CACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,MAAO,CACL,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,OAAQ,CACN,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,OAAQ,CACN,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,MAAO,CACL,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAELC,KAAM,CACJ,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EA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","file":"static/js/main.8d66668c.chunk.js","sourcesContent":["const Colors = {\r\n  GRAY: {\r\n    0: \"#f8f9fa\",\r\n    1: \"#f1f3f5\",\r\n    2: \"#e9ecef\",\r\n    3: \"#dee2e6\",\r\n    4: \"#ced4da\",\r\n    5: \"#adb5bd\",\r\n    6: \"#868e96\",\r\n    7: \"#495057\",\r\n    8: \"#343a40\",\r\n    9: \"#212529\",\r\n  },\r\n  RED: {\r\n    0: \"#fff5f5\",\r\n    1: \"#ffe3e3\",\r\n    2: \"#ffc9c9\",\r\n    3: \"#ffa8a8\",\r\n    4: \"#ff8787\",\r\n    5: \"#ff6b6b\",\r\n    6: \"#fa5252\",\r\n    7: \"#f03e3e\",\r\n    8: \"#e03131\",\r\n    9: \"#c92a2a\",\r\n  },\r\n  PINK: {\r\n    0: \"#fff0f6\",\r\n    1: \"#ffdeeb\",\r\n    2: \"#fcc2d7\",\r\n    3: \"#faa2c1\",\r\n    4: \"#f783ac\",\r\n    5: \"#f06595\",\r\n    6: \"#e64980\",\r\n    7: \"#d6336c\",\r\n    8: \"#c2255c\",\r\n    9: \"#a61e4d\",\r\n  },\r\n  GRAPE: {\r\n    0: \"#f8f0fc\",\r\n    1: \"#f3d9fa\",\r\n    2: \"#eebefa\",\r\n    3: \"#e599f7\",\r\n    4: \"#da77f2\",\r\n    5: \"#cc5de8\",\r\n    6: \"#be4bdb\",\r\n    7: \"#ae3ec9\",\r\n    8: \"#9c36b5\",\r\n    9: \"#862e9c\",\r\n  },\r\n  VIOLET: {\r\n    0: \"#f3f0ff\",\r\n    1: \"#e5dbff\",\r\n    2: \"#d0bfff\",\r\n    3: \"#b197fc\",\r\n    4: \"#9775fa\",\r\n    5: \"#845ef7\",\r\n    6: \"#7950f2\",\r\n    7: \"#7048e8\",\r\n    8: \"#6741d9\",\r\n    9: \"#5f3dc4\",\r\n  },\r\n  INDIGO: {\r\n    0: \"#edf2ff\",\r\n    1: \"#dbe4ff\",\r\n    2: \"#bac8ff\",\r\n    3: \"#91a7ff\",\r\n    4: \"#748ffc\",\r\n    5: \"#5c7cfa\",\r\n    6: \"#4c6ef5\",\r\n    7: \"#4263eb\",\r\n    8: \"#3b5bdb\",\r\n    9: \"#364fc7\",\r\n  },\r\n  BLUE: {\r\n    0: \"#e7f5ff\",\r\n    1: \"#d0ebff\",\r\n    2: \"#a5d8ff\",\r\n    3: \"#74c0fc\",\r\n    4: \"#4dabf7\",\r\n    5: \"#339af0\",\r\n    6: \"#228be6\",\r\n    7: \"#1c7ed6\",\r\n    8: \"#1971c2\",\r\n    9: \"#1864ab\",\r\n  },\r\n  CYAN: {\r\n    0: \"#e3fafc\",\r\n    1: \"#c5f6fa\",\r\n    2: \"#99e9f2\",\r\n    3: \"#66d9e8\",\r\n    4: \"#3bc9db\",\r\n    5: \"#22b8cf\",\r\n    6: \"#15aabf\",\r\n    7: \"#1098ad\",\r\n    8: \"#0c8599\",\r\n    9: \"#0b7285\",\r\n  },\r\n  TEAL: {\r\n    0: \"#e6fcf5\",\r\n    1: \"#c3fae8\",\r\n    2: \"#96f2d7\",\r\n    3: \"#63e6be\",\r\n    4: \"#38d9a9\",\r\n    5: \"#20c997\",\r\n    6: \"#12b886\",\r\n    7: \"#0ca678\",\r\n    8: \"#099268\",\r\n    9: \"#087f5b\",\r\n  },\r\n  GREEN: {\r\n    0: \"#ebfbee\",\r\n    1: \"#d3f9d8\",\r\n    2: \"#b2f2bb\",\r\n    3: \"#8ce99a\",\r\n    4: \"#69db7c\",\r\n    5: \"#51cf66\",\r\n    6: \"#40c057\",\r\n    7: \"#37b24d\",\r\n    8: \"#2f9e44\",\r\n    9: \"#2b8a3e\",\r\n  },\r\n  LIME: {\r\n    0: \"#f4fce3\",\r\n    1: \"#e9fac8\",\r\n    2: \"#d8f5a2\",\r\n    3: \"#c0eb75\",\r\n    4: \"#a9e34b\",\r\n    5: \"#94d82d\",\r\n    6: \"#82c91e\",\r\n    7: \"#74b816\",\r\n    8: \"#66a80f\",\r\n    9: \"#5c940d\",\r\n  },\r\n  YELLOW: {\r\n    0: \"#fff9db\",\r\n    1: \"#fff3bf\",\r\n    2: \"#ffec99\",\r\n    3: \"#ffe066\",\r\n    4: \"#ffd43b\",\r\n    5: \"#fcc419\",\r\n    6: \"#fab005\",\r\n    7: \"#f59f00\",\r\n    8: \"#f08c00\",\r\n    9: \"#e67700\",\r\n  },\r\n  ORANGE: {\r\n    0: \"#fff4e6\",\r\n    1: \"#ffe8cc\",\r\n    2: \"#ffd8a8\",\r\n    3: \"#ffc078\",\r\n    4: \"#ffa94d\",\r\n    5: \"#ff922b\",\r\n    6: \"#fd7e14\",\r\n    7: \"#f76707\",\r\n    8: \"#e8590c\",\r\n    9: \"#d9480f\",\r\n  },\r\n}\r\n\r\nexport const BaseColor = {\r\n  border: Colors.GRAY[2], //  기본 박스들의 border 값\r\n  inputBorder: Colors.GRAY[5], //  input, select\r\n  default: Colors.GRAY[7], //  메인이 되는 gray 색상\r\n  primary: Colors.INDIGO[8], //  메인이 되는 blue 색상\r\n  font: Colors.GRAY[9], //  폰트 색상,\r\n  alert: {\r\n    information: {\r\n      //  정보\r\n      border: Colors.BLUE[2],\r\n      background: Colors.BLUE[0],\r\n    },\r\n    success: {\r\n      //  성공\r\n      border: Colors.GREEN[2],\r\n      background: Colors.GREEN[0],\r\n    },\r\n    warning: {\r\n      //  경고\r\n      border: Colors.YELLOW[2],\r\n      background: Colors.YELLOW[0],\r\n    },\r\n    error: {\r\n      //  실패\r\n      border: Colors.RED[2],\r\n      background: Colors.RED[0],\r\n    },\r\n  },\r\n}\r\n\r\nexport default Colors\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Typography } from \"minimum-ui\"\r\n\r\nconst LayoutTitle: React.FC = ({ children }) => {\r\n  const { Title } = Typography\r\n  return <Title>{children}</Title>\r\n}\r\n\r\nconst LayoutTitleDescription: React.FC = ({ children }) => {\r\n  const { Body } = Typography\r\n  return <Body>{children}</Body>\r\n}\r\n\r\nconst LayoutComponentTitle: React.FC = ({ children }) => {\r\n  const { SubTitle } = Typography\r\n  return (\r\n    <LayoutComponentTitleWrapper>\r\n      <SubTitle>{children}</SubTitle>\r\n    </LayoutComponentTitleWrapper>\r\n  )\r\n}\r\n\r\nconst LayoutComponentDescription: React.FC = ({ children }) => {\r\n  const { Body } = Typography\r\n  return <Body>{children}</Body>\r\n}\r\n\r\nconst LayoutComponentTitleWrapper = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\nexport {\r\n  LayoutTitle,\r\n  LayoutTitleDescription,\r\n  LayoutComponentTitle,\r\n  LayoutComponentDescription,\r\n}\r\n","export interface ItemProps {\r\n  name: string\r\n  type: string[]\r\n  default: string\r\n  description: string\r\n}\r\n\r\nexport interface ComponentProps {\r\n  [key: string]: {\r\n    displayName: string\r\n    props: ItemProps[]\r\n  }\r\n}\r\n\r\nconst menus: ComponentProps = {\r\n  tabs: {\r\n    displayName: \"Tabs\",\r\n    props: [\r\n      {\r\n        name: \"headers\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description:\r\n          \"각 탭 아이템을 구성합니다 (item array 구성 : [{text: '', value: '', status: 'default', icon: ''}])\",\r\n      },\r\n      {\r\n        name: \"value\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description:\r\n          \"각 탭 아이템 중 하나가 value 값과 동일한다면 해당되는 탭을 선택된걸로 표현합니다\",\r\n      },\r\n      {\r\n        name: \"type\",\r\n        type: [\"round\", \"rectangle\"],\r\n        default: \"round\",\r\n        description: \"각 탭 상단 모서리의 외형을 지정합니다\",\r\n      },\r\n    ],\r\n  },\r\n  progress: {\r\n    displayName: \"Progress\",\r\n    props: [\r\n      {\r\n        name: \"type\",\r\n        type: [\"circle\", \"linear\", \"circular\"],\r\n        default: \"reqiured\",\r\n        description: \"진행 상태를 나타내는 형태를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"color\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"색상을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"backgroundColor\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"배경 색상을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"progress\",\r\n        type: [\"number\"],\r\n        default: \"100\",\r\n        description: \"진행 상태가 얼마나 진행되었는지 지정합니다\",\r\n      },\r\n      {\r\n        name: \"speed\",\r\n        type: [\"number\"],\r\n        default: \"2000\",\r\n        description: \"type중 circular의 회전 속도를 조절합니다\",\r\n      },\r\n    ],\r\n  },\r\n  flex: {\r\n    displayName: \"Flex\",\r\n    props: [\r\n      {\r\n        name: \"align\",\r\n        type: [\"center\", \"flex-start\", \"flex-end\"],\r\n        default: \"center\",\r\n        description: \"구성 항목의 세로 배치 설정을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"justify\",\r\n        type: [\r\n          \"center\",\r\n          \"flex-start\",\r\n          \"flex-end\",\r\n          \"space-between\",\r\n          \"space-around\",\r\n          \"space-evenly\",\r\n          \"stretch\",\r\n        ],\r\n        default: \"flex-start\",\r\n        description: \"구성 항목의 가로 배치 설정을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"direction\",\r\n        type: [\"row\", \"column\"],\r\n        default: \"row\",\r\n        description: \"구성 항목의 배치 방향을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"wrap\",\r\n        type: [\"nowrap\", \"wrap\", \"wrap-reverse\", \"inherit\"],\r\n        default: \"nowrap\",\r\n        description: \"구성 항목의 wrap 형태를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"gap\",\r\n        type: [\"number\"],\r\n        default: \"8\",\r\n        description: \"구성 항목의 간격을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  grid: {\r\n    displayName: \"Grid\",\r\n    props: [\r\n      {\r\n        name: \"row\",\r\n        type: [\"number\"],\r\n        default: \"1\",\r\n        description: \"행의 개수를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"col\",\r\n        type: [\"number\"],\r\n        default: \"1\",\r\n        description: \"열의 개수를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"align\",\r\n        type: [\"center\", \"flex-start\", \"flex-end\"],\r\n        default: \"center\",\r\n        description: \"구성 항목의 세로 배치 설정을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"justify\",\r\n        type: [\"center\", \"flex-start\", \"flex-end\", \"stretch\"],\r\n        default: \"center\",\r\n        description: \"구성 항목의 가로 배치 설정을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"gap\",\r\n        type: [\"number\"],\r\n        default: \"0\",\r\n        description: \"구성 항목의 간격을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  divider: {\r\n    displayName: \"Divider\",\r\n    props: [\r\n      {\r\n        name: \"size\",\r\n        type: [\"number\"],\r\n        default: \"8\",\r\n        description: \"두께를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"color\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"배경 색상을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  typography: {\r\n    displayName: \"Typography\",\r\n    props: [\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  modal: {\r\n    displayName: \"Modal\",\r\n    props: [\r\n      {\r\n        name: \"zIndex\",\r\n        type: [\"number\"],\r\n        default: \"1000\",\r\n        description: \"z-index 를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n      {\r\n        name: \"onClickOutside\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"열려있는 상태에서 비활성된 바깥 영역을 클릭시 동작합니다\",\r\n      },\r\n    ],\r\n  },\r\n  collapse: {\r\n    displayName: \"Collapse\",\r\n    props: [\r\n      {\r\n        name: \"open\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"담고 있는 항목의 노출 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"speed\",\r\n        type: [\"number\"],\r\n        default: \"200\",\r\n        description: \"펼쳐지거나/닫혀질 때의 속도를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n      {\r\n        name: \"width\",\r\n        type: [\"number\"],\r\n        default: \"100%\",\r\n        description: \"펼침 영역의 너비를 지정합니다\",\r\n      },\r\n    ],\r\n  },\r\n  button: {\r\n    displayName: \"Button\",\r\n    props: [\r\n      {\r\n        name: \"size\",\r\n        type: [\"samll\", \"medium\", \"large\"],\r\n        default: \"medium\",\r\n        description: \"크기를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"variant\",\r\n        type: [\"default\", \"outline\", \"text\"],\r\n        default: \"default\",\r\n        description: \"외형을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"primary\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"강조 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"width\",\r\n        type: [\"string\"],\r\n        default: \"100%\",\r\n        description: \"너비를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"leftIcon\",\r\n        type: [\"ReactNode\"],\r\n        default: \"\",\r\n        description: \"버튼 텍스트 왼쪽에 배치할 아이콘을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"rightIcon\",\r\n        type: [\"ReactNode\"],\r\n        default: \"\",\r\n        description: \"버튼 텍스트 오른쪽에 배치할 아이콘을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"loading\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"로딩중 여부를 결정합니다\",\r\n      },\r\n      {\r\n        name: \"disalbed\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"비활성 여부를 결정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  textarea: {\r\n    displayName: \"Textarea\",\r\n    props: [\r\n      {\r\n        name: \"width\",\r\n        type: [\"string\"],\r\n        default: \"100%\",\r\n        description: \"너비를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"height\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"높이를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"placeholder\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"비어있을시 가이드로 보여줄 문구를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"cols\",\r\n        type: [\"number\"],\r\n        default: \"\",\r\n        description: \"입력 텍스트의 열을 개수를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"rows\",\r\n        type: [\"number\"],\r\n        default: \"4\",\r\n        description: \"입력 텍스트의 행의 개수를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  drawer: {\r\n    displayName: \"Drawer\",\r\n    props: [\r\n      {\r\n        name: \"open\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"열림/닫힘 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"zIndex\",\r\n        type: [\"number\"],\r\n        default: \"1000\",\r\n        description: \"z-index 를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"size\",\r\n        type: [\"number\"],\r\n        default: \"200\",\r\n        description:\r\n          \"크기를 지정합니다. 생성되는 방향에 따라 너비 혹은 높이로 지정됩니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n      {\r\n        name: \"direction\",\r\n        type: [\"left\", \"right\", \"top\", \"bottom\"],\r\n        default: \"\",\r\n        description: \"열림/닫힘시 어떤 방향에서 나타날지 지정합니다\",\r\n      },\r\n      {\r\n        name: \"onClickOutside\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"열려있는 상태에서 비활성된 바깥 영역을 클릭시 동작합니다\",\r\n      },\r\n    ],\r\n  },\r\n  table: {\r\n    displayName: \"Table\",\r\n    props: [\r\n      {\r\n        name: \"style\",\r\n        type: [\"object\"],\r\n        default: \"\",\r\n        description:\r\n          \"일반적인 CSS style을 주입할 수 있습니다 구성하는 Root, Head, Body, Row, Cell 각각에도 지정 가능합니다\",\r\n      },\r\n      {\r\n        name: \"ratio\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description:\r\n          \"구성 항목의 각 열에 비율이 전달됩니다. 미기입시 기본적으로 행의 데이터에 따라 균일하게 표현됩니다\",\r\n      },\r\n    ],\r\n  },\r\n  quicktable: {\r\n    displayName: \"QuickTable\",\r\n    props: [\r\n      {\r\n        name: \"header\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description: \"문자열 배열을 사용해 테이블의 헤더를 구성합니다\",\r\n      },\r\n      {\r\n        name: \"data\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description:\r\n          \"각 행을 구성할 객체 배열입니다. 행을 표현할때 해당 각 인덱스에 해당되는 데이터를 기반으로 테이블을 그려냅니다\",\r\n      },\r\n      {\r\n        name: \"ratio\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description: \"각 행의 비율을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"customHeader\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description:\r\n          \"각 헤더의 데이터를 기반으로 원하는대로 그려낼 수 있습니다\",\r\n      },\r\n      {\r\n        name: \"customRow\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"각 행의 데이터를 기반으로 원하는대로 그려낼 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  select: {\r\n    displayName: \"Select\",\r\n    props: [\r\n      {\r\n        name: \"options\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description:\r\n          \"name과 value를 담고있는 아이템으로 구성된 배열입니다. 각 행의 name을 기반으로 표현됩니다\",\r\n      },\r\n      {\r\n        name: \"width\",\r\n        type: [\"string\"],\r\n        default: \"100%\",\r\n        description: \"너비를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"onChange\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description:\r\n          \"하나가 선택되었을때 호출되는 이벤트로 클릭한 행에 해당되는 데이터를 매개변수로 전달합니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  pagination: {\r\n    displayName: \"Pagination\",\r\n    props: [\r\n      {\r\n        name: \"currentPage\",\r\n        type: [\"number\"],\r\n        default: \"\",\r\n        description: \"현재 페이지를 지정합니다 \",\r\n      },\r\n      {\r\n        name: \"pageSize\",\r\n        type: [\"number\"],\r\n        default: \"\",\r\n        description: \"전체 페이지 크기를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"withButton\",\r\n        type: [\"boolean\"],\r\n        default: \"true\",\r\n        description: \"이전/다음 버튼의 활성 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"customButtons\",\r\n        type: [\"array\"],\r\n        default: \"\",\r\n        description: \"텍스트 및 아이콘을 사용하여 이전/다음 버튼을 구성합니다\",\r\n      },\r\n      {\r\n        name: \"onChange\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"현재 페이지가 변경되었을 때 발생하는 이벤트입니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n      {\r\n        name: \"buttonStyle\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"각 페이지 버튼들에 CSS Style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  input: {\r\n    displayName: \"Input\",\r\n    props: [\r\n      {\r\n        name: \"title\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"제목을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"value\",\r\n        type: [\"any\"],\r\n        default: \"\",\r\n        description: \"값을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"width\",\r\n        type: [\"string\"],\r\n        default: \"100%\",\r\n        description: \"너비를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"onChange\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"값이 변경 되었을 때 발생하는 이벤트입니다\",\r\n      },\r\n      {\r\n        name: \"onBlur\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description: \"포커스가 변경 되었을 때 발생하는 이벤트입니다\",\r\n      },\r\n      {\r\n        name: \"style\",\r\n        type: [\"CSSProperties\"],\r\n        default: \"\",\r\n        description: \"일반적인 CSS style을 주입할 수 있습니다\",\r\n      },\r\n    ],\r\n  },\r\n  menu: {\r\n    displayName: \"Menu\",\r\n    props: [\r\n      {\r\n        name: \"selected\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"메뉴 아이템의 선택여부를 지정합니다.\",\r\n      },\r\n      {\r\n        name: \"title\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"메뉴 그룹의 이름을 지정합니다.\",\r\n      },\r\n      {\r\n        name: \"open\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"메뉴 그룹의 열림/닫힘 상태를 지정합니다.\",\r\n      },\r\n    ],\r\n  },\r\n  radio: {\r\n    displayName: \"Radio\",\r\n    props: [\r\n      {\r\n        name: \"title\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"제목을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"direction\",\r\n        type: [\"left\", \"right\", \"top\", \"bottom\"],\r\n        default: \"right\",\r\n        description: \"제목 방향을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"checked\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"선택된 상태 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"value\",\r\n        type: [\"any\"],\r\n        default: \"\",\r\n        description: \"값을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"color\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"색상을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"disabled\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"활성 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"size\",\r\n        type: [\"small\", \"medium\", \"large\"],\r\n        default: \"medium\",\r\n        description: \"크기를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"onChange\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description:\r\n          \"선택시 발생하는 이벤트입니다. 이때 매개변수로 value로 지정한 값이 전달됩니다\",\r\n      },\r\n    ],\r\n  },\r\n  checkbox: {\r\n    displayName: \"Checkbox\",\r\n    props: [\r\n      {\r\n        name: \"title\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"제목을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"direction\",\r\n        type: [\"left\", \"right\", \"top\", \"bottom\"],\r\n        default: \"left\",\r\n        description: \"제목 방향을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"checked\",\r\n        type: [\"boolean\"],\r\n        default: \"false\",\r\n        description: \"선택된 상태 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"value\",\r\n        type: [\"any\"],\r\n        default: \"\",\r\n        description: \"값을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"color\",\r\n        type: [\"string\"],\r\n        default: \"\",\r\n        description: \"색상을 지정합니다\",\r\n      },\r\n      {\r\n        name: \"disabled\",\r\n        type: [\"boolean\"],\r\n        default: \"\",\r\n        description: \"활성 여부를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"size\",\r\n        type: [\"small\", \"medium\", \"large\"],\r\n        default: \"medium\",\r\n        description: \"크기를 지정합니다\",\r\n      },\r\n      {\r\n        name: \"onChange\",\r\n        type: [\"function\"],\r\n        default: \"\",\r\n        description:\r\n          \"선택시 발생하는 이벤트입니다. 이때 매개변수로 value로 지정한 값이 전달됩니다\",\r\n      },\r\n    ],\r\n  },\r\n}\r\n\r\nexport default menus\r\n","import React from \"react\"\r\n\r\ninterface Menu {\r\n  id: string\r\n  url: string\r\n}\r\ninterface Status {\r\n  selectedMenu: Menu | undefined\r\n  isLeftMenu: boolean | undefined\r\n  setSelectedMenu: React.Dispatch<React.SetStateAction<Menu>>\r\n  setLeftMenu: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst initialState: Status = {\r\n  selectedMenu: {\r\n    id: \"\",\r\n    url: \"/\",\r\n  },\r\n  isLeftMenu: false,\r\n  setSelectedMenu: () => {},\r\n  setLeftMenu: () => {},\r\n}\r\n\r\nexport const StatusContext = React.createContext({ ...initialState })\r\n","import { useContext } from \"react\"\r\n\r\nimport { StatusContext } from \"../contexts/StatusContext\"\r\n\r\nconst useStatus = () => {\r\n  const store = useContext(StatusContext)\r\n\r\n  return store\r\n}\r\n\r\nexport default useStatus\r\n","export const replacePathname = (pathname: string) => {\r\n  return pathname.replace(\"/minimum-ui\", \"\")\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Grid } from \"minimum-ui\"\r\nimport styled from \"styled-components\"\r\n\r\nimport Color, { BaseColor } from \"../../assets/styles/color\"\r\nimport components, { ComponentProps } from \"../../assets/components\"\r\nimport useStatus from \"../../hooks/useStatus\"\r\nimport { replacePathname } from \"../../lib/path\"\r\n\r\nexport const sortedComponents = (() => {\r\n  const names = Object.keys(components)\r\n  names.sort()\r\n  let newComponentSet: ComponentProps = {}\r\n  names.forEach((name) => {\r\n    newComponentSet[name] = components[name]\r\n  })\r\n  return newComponentSet\r\n})()\r\n\r\nconst ComponentBox: React.FC = () => {\r\n  const names = Object.keys(sortedComponents)\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  const { selectedMenu, setSelectedMenu } = useStatus()\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const currentWidth = window.innerWidth\r\n      setWidth(currentWidth)\r\n    }\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions)\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions)\r\n  }, [])\r\n\r\n  return (\r\n    <Grid gap={10} col={width > 1050 ? 4 : 3} style={{ marginBottom: \"50px\" }}>\r\n      {names.map((menuName, index) => {\r\n        const id = `cb-${index}`\r\n        const url = `/minimum-ui/${menuName}`\r\n        const isSelected = selectedMenu?.url === url\r\n        console.log(selectedMenu?.url, url)\r\n        return (\r\n          <BoxWrapper\r\n            key={id}\r\n            to={replacePathname(url)}\r\n            onClick={() => {\r\n              setSelectedMenu({\r\n                id: menuName,\r\n                url: url,\r\n              })\r\n            }}\r\n            data-selected={isSelected}\r\n          >\r\n            {`<${sortedComponents[menuName].displayName}/>`}\r\n          </BoxWrapper>\r\n        )\r\n      })}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst BoxWrapper = styled(Link)`\r\n  text-decoration: none;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n\r\n  border: 1px solid ${Color.GRAY[4]};\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  color: ${BaseColor.font};\r\n  border-radius: 4px;\r\n  font-family: NanumGothicLight;\r\n\r\n  &:hover {\r\n    font-family: NanumGothicBold;\r\n  }\r\n\r\n  &[data-selected=\"true\"] {\r\n    font-family: NanumGothicBold;\r\n    border-color: ${BaseColor.alert.information.border};\r\n    background-color: ${BaseColor.alert.information.background};\r\n  }\r\n`\r\n\r\nexport default ComponentBox\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Flex, QuickTable } from \"minimum-ui\"\r\nimport Color from \"../../assets/styles/color\"\r\nimport components, { ItemProps } from \"../../assets/components\"\r\n\r\nimport Layout from \"../Layout\"\r\n\r\ninterface Props {\r\n  name: string\r\n  hasTitle?: boolean\r\n}\r\n\r\nconst PropsBox: React.FC<Props> = ({ name, hasTitle = false }) => {\r\n  const urlRemoveName = name ? name.toLocaleLowerCase() : \"\"\r\n  const typeOfButtonProps = (arr: string[]) => {\r\n    return arr.map((_: string, index: number) => (\r\n      <React.Fragment key={index}>\r\n        <PropsTypeBox>{_}</PropsTypeBox>\r\n        {index !== arr.length - 1 && <div />}\r\n      </React.Fragment>\r\n    ))\r\n  }\r\n\r\n  const hasPropsTable = urlRemoveName !== \"\" && !!components[urlRemoveName]\r\n\r\n  return (\r\n    <Flex gap={0} direction=\"column\" align=\"flex-start\">\r\n      {hasPropsTable && hasTitle ? (\r\n        <Layout.ComponentTitle>Props</Layout.ComponentTitle>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Flex style={{ width: \"100%\", overflowX: \"auto\" }}>\r\n        <Flex\r\n          direction=\"column\"\r\n          align=\"flex-start\"\r\n          style={{ minWidth: \"500px\" }}\r\n        >\r\n          {hasPropsTable ? (\r\n            <>\r\n              <QuickTable\r\n                ratio={[20, 23, 20, 37]}\r\n                header={[\"Name\", \"Type\", \"Default\", \"Description\"]}\r\n                data={components[urlRemoveName].props}\r\n                customRow={(item: ItemProps) => {\r\n                  return [\r\n                    <div>{item.name}</div>,\r\n                    <div>{typeOfButtonProps(item.type)}</div>,\r\n                    <div>{item.default || \"-\"}</div>,\r\n                    <div>{item.description}</div>,\r\n                  ]\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst PropsTypeBox = styled.span`\r\n  border-radius: 2px;\r\n  background: ${Color.GRAY[2]};\r\n  padding: 2px 4px;\r\n  font-size: 12px;\r\n  user-select: none;\r\n`\r\n\r\nexport default PropsBox\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst Menu: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g data-name=\"Layer 2\">\r\n        <g data-name=\"menu\">\r\n          <rect\r\n            width=\"24\"\r\n            height=\"24\"\r\n            transform=\"rotate(180 12 12)\"\r\n            opacity=\"0\"\r\n          />\r\n          <rect x=\"3\" y=\"11\" width=\"18\" height=\"2\" rx=\".95\" ry=\".95\" />\r\n          <rect x=\"3\" y=\"16\" width=\"18\" height=\"2\" rx=\".95\" ry=\".95\" />\r\n          <rect x=\"3\" y=\"6\" width=\"18\" height=\"2\" rx=\".95\" ry=\".95\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst Github: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g data-name=\"Layer 2\">\r\n        <rect\r\n          width=\"24\"\r\n          height=\"24\"\r\n          transform=\"rotate(180 12 12)\"\r\n          opacity=\"0\"\r\n        />\r\n        <path\r\n          d=\"M12 1A10.89 10.89 0 0 0 1 11.77 10.79 10.79 0 0 0 8.52 22c.55.1.75-.23.75-.52v-1.83c-3.06.65-3.71-1.44-3.71-1.44a2.86 2.86 0 0 0-1.22-1.58c-1-.66.08-.65.08-.65a2.31 2.31 0 0 1 1.68 1.11 2.37 2.37 0 0 0 3.2.89 2.33 2.33 0 0 1 .7-1.44c-2.44-.27-5-1.19-5-5.32a4.15 4.15 0 0 1 1.11-2.91 3.78 3.78 0 0 1 .11-2.84s.93-.29 3 1.1a10.68 10.68 0 0 1 5.5 0c2.1-1.39 3-1.1 3-1.1a3.78 3.78 0 0 1 .11 2.84A4.15 4.15 0 0 1 19 11.2c0 4.14-2.58 5.05-5 5.32a2.5 2.5 0 0 1 .75 2v2.95c0 .35.2.63.75.52A10.8 10.8 0 0 0 23 11.77 10.89 10.89 0 0 0 12 1\"\r\n          data-name=\"github\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Github\r\n","import styled from \"styled-components\"\r\n\r\nimport useStatus from \"../../hooks/useStatus\"\r\nimport Menu from \"../Icon/Menu\"\r\nimport Github from \"../Icon/Github\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Header: React.FC = () => {\r\n  const history = useHistory()\r\n  const { isLeftMenu, setLeftMenu } = useStatus()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MenuIconWrapper onClick={() => setLeftMenu(!isLeftMenu)}>\r\n        <Menu fill={\"#000000\"} />\r\n      </MenuIconWrapper>\r\n      <Logo onClick={() => history.push(\"/\")}>Minimum UI</Logo>\r\n      <GithubIconWrapper onClick={() => setLeftMenu(!isLeftMenu)}>\r\n        <Github fill={\"#000000\"} />\r\n      </GithubIconWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst MenuIconWrapper = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  position: absolute;\r\n  left: 8px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst GithubIconWrapper = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 8px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: ${BaseColor.border} 0px 2px 6px;\r\n`\r\n\r\nconst Logo = styled.div`\r\n  height: 45px;\r\n  position: absolute;\r\n  font-size: 1.5rem;\r\n  font-family: \"Montserrat\";\r\n  font-weight: 900;\r\n  line-height: 45px;\r\n  user-select: none;\r\n  color: ${BaseColor.font};\r\n  cursor: pointer;\r\n`\r\n\r\nexport default Header\r\n","import styled from \"styled-components\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <a href=\"https://github.com/kdilot\" target=\"_blank\" rel=\"noreferrer\">\r\n        Kdilot\r\n      </a>\r\n      <span />\r\n      <a href=\"https://github.com/Kelten89\" target=\"_blank\" rel=\"noreferrer\">\r\n        Kelten\r\n      </a>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.footer`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 41px;\r\n  width: 100%;\r\n  border-top: 1px solid ${BaseColor.border};\r\n\r\n  span {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1px;\r\n    height: 12px;\r\n    margin: 0 10px;\r\n    background: ${BaseColor.font};\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    font-family: \"Montserrat\";\r\n    font-weight: 300;\r\n  }\r\n`\r\n\r\nexport default Footer\r\n","const BaseStyle = {\r\n  padding: \"10px\", //  기본 박스의 padding\r\n  boxHeight: \"40px\", //  버튼, 인풋, 셀렉트 등이 기초 높이\r\n  radius: \"2px\",\r\n  space: \"8px\", // 사이 간격\r\n  disabledOpacity: 0.2,\r\n  containerPadding: \"0 20px\", //  메인 양옆 간격, divider 컴포넌트에는 적용하지 않음\r\n  fontSize: \"16px\",\r\n}\r\n\r\nexport default BaseStyle\r\n","import styled from \"styled-components\"\r\nimport { CodeBlock, hopscotch } from \"react-code-blocks\"\r\nimport { Typography } from \"minimum-ui\"\r\n\r\nimport Color, { BaseColor } from \"../../assets/styles/color\"\r\nimport {\r\n  LayoutComponentDescription,\r\n  LayoutComponentTitle,\r\n  LayoutTitle,\r\n  LayoutTitleDescription,\r\n} from \"./Contents\"\r\nimport { ComponentBox, PropsBox, Header, Footer } from \"..\"\r\nimport useStatus from \"../../hooks/useStatus\"\r\nimport BaseStyle from \"../../assets/styles/base\"\r\n\r\nconst MainLayout = styled.div`\r\n  width: 100%;\r\n  max-width: 1024px;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: 820px) {\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\ninterface ILeft {\r\n  name?: string\r\n}\r\n\r\nconst LeftWrapper: React.FC<ILeft> = () => {\r\n  const { selectedMenu } = useStatus()\r\n  return (\r\n    <LeftAreaWrapper>\r\n      <ComponentBox />\r\n      {selectedMenu?.id && (\r\n        <>\r\n          <Typography.Title>Props</Typography.Title>\r\n          <LeftAreaPropsWrapper>\r\n            <PropsBox name={selectedMenu?.id || \"\"} />\r\n          </LeftAreaPropsWrapper>\r\n        </>\r\n      )}\r\n    </LeftAreaWrapper>\r\n  )\r\n}\r\n\r\nconst LeftAreaWrapper = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n  min-width: 375px;\r\n  max-width: 604px;\r\n  padding-right: 80px;\r\n  padding-top: 50px;\r\n  padding-left: 20px;\r\n  overflow: hidden;\r\n\r\n  @media only screen and (max-width: 1050px) {\r\n    padding-right: 20px;\r\n  }\r\n\r\n  @media only screen and (max-width: 820px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst LeftAreaPropsWrapper = styled.div`\r\n  height: 450px;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst RightAreaWrapper = styled.div`\r\n  position: relative;\r\n  width: 420px;\r\n  border: 1px solid ${BaseColor.border};\r\n\r\n  @media only screen and (max-width: 820px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst RightWrapper: React.FC = (props) => {\r\n  const { children } = props\r\n  return <RightAreaWrapper>{children}</RightAreaWrapper>\r\n}\r\n\r\nconst ComponentWrapper = styled.div`\r\n  border: 1px solid ${Color.GRAY[3]};\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: ${BaseStyle.radius};\r\n  overflow: auto;\r\n`\r\n\r\nconst CodeWrapper: React.FC<{ code: string }> = (props) => {\r\n  const { code } = props\r\n\r\n  return (\r\n    <CodeBlock\r\n      language=\"jsx\"\r\n      text={code}\r\n      theme={hopscotch}\r\n      wrapLines={true}\r\n      codeBlock\r\n      showLineNumbers={false}\r\n      customStyle={{\r\n        padding: \"2px\",\r\n        paddingBottom: 0,\r\n        margin: \"10px 0\",\r\n        borderRadius: BaseStyle.radius,\r\n        fontSize: \"14px\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ContentsLayout: React.FC = (props) => {\r\n  const { children } = props\r\n  const { selectedMenu } = useStatus()\r\n  return (\r\n    <MainLayout>\r\n      <LeftWrapper>\r\n        <ComponentBox />\r\n        <PropsBox name={selectedMenu?.id || \"\"} />\r\n      </LeftWrapper>\r\n      <RightWrapper>\r\n        <Header />\r\n        <RightContentWrapper>\r\n          {children}\r\n          <PropsBox hasTitle={true} name={selectedMenu?.id || \"\"} />\r\n        </RightContentWrapper>\r\n        <Footer />\r\n      </RightWrapper>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nconst RightContentWrapper = styled.div`\r\n  height: calc(100% - 80px);\r\n  overflow: auto;\r\n  width: 100%;\r\n  padding: 18px;\r\n`\r\n\r\nconst Layout = {\r\n  MainLayout,\r\n  LeftWrapper,\r\n  RightWrapper,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  ContentsLayout,\r\n  Title: LayoutTitle,\r\n  Description: LayoutTitleDescription,\r\n  ComponentTitle: LayoutComponentTitle,\r\n  ComponentDescription: LayoutComponentDescription,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst Bell: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill={fill}\r\n    >\r\n      <g data-name=\"Layer 2\">\r\n        <g data-name=\"bell\">\r\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\r\n          <path d=\"M20.52 15.21l-1.8-1.81V8.94a6.86 6.86 0 0 0-5.82-6.88 6.74 6.74 0 0 0-7.62 6.67v4.67l-1.8 1.81A1.64 1.64 0 0 0 4.64 18H8v.34A3.84 3.84 0 0 0 12 22a3.84 3.84 0 0 0 4-3.66V18h3.36a1.64 1.64 0 0 0 1.16-2.79zM14 18.34A1.88 1.88 0 0 1 12 20a1.88 1.88 0 0 1-2-1.66V18h4z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Bell\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst Folder: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill={fill}\r\n    >\r\n      <g data-name=\"Layer 2\">\r\n        <g data-name=\"folder\">\r\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\r\n          <path d=\"M19.5 20.5h-15A2.47 2.47 0 0 1 2 18.07V5.93A2.47 2.47 0 0 1 4.5 3.5h4.6a1 1 0 0 1 .77.37l2.6 3.18h7A2.47 2.47 0 0 1 22 9.48v8.59a2.47 2.47 0 0 1-2.5 2.43z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Folder\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill={fill}\r\n    >\r\n      <g data-name=\"Layer 2\">\r\n        <g data-name=\"shopping-cart\">\r\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\r\n          <path d=\"M21.08 7a2 2 0 0 0-1.7-1H6.58L6 3.74A1 1 0 0 0 5 3H3a1 1 0 0 0 0 2h1.24L7 15.26A1 1 0 0 0 8 16h9a1 1 0 0 0 .89-.55l3.28-6.56A2 2 0 0 0 21.08 7z\" />\r\n          <circle cx=\"7.5\" cy=\"19.5\" r=\"1.5\" />\r\n          <circle cx=\"17.5\" cy=\"19.5\" r=\"1.5\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","import { useState } from \"react\"\r\nimport { Flex, Tabs } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\nimport Bell from \"../../components/Icon/Bell\"\r\nimport Folder from \"../../components/Icon/Folder\"\r\nimport Cart from \"../../components/Icon/Cart\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst TabsPage: React.FC = () => {\r\n  const tab1List = [\r\n    { text: \"Tab 1\", value: \"tab1\" },\r\n    { text: \"Tab 2\", value: \"tab2\" },\r\n    { text: \"Tab 3\", value: \"tab3\", status: \"disabled\" },\r\n  ]\r\n  const [tab1Value, setTab1Value] = useState(tab1List[0].value)\r\n\r\n  const [tab2Value, setTab2Value] = useState(\"bell\")\r\n  const tab2List = [\r\n    {\r\n      text: \"Bell\",\r\n      value: \"bell\",\r\n      icon: <Bell fill={tab2Value === \"bell\" ? \"#fff\" : BaseColor.font} />,\r\n    },\r\n    {\r\n      text: \"Folder\",\r\n      value: \"folder\",\r\n      icon: <Folder fill={tab2Value === \"folder\" ? \"#fff\" : BaseColor.font} />,\r\n    },\r\n    {\r\n      text: \"Cart\",\r\n      value: \"card\",\r\n      icon: <Cart fill={tab2Value === \"card\" ? \"#fff\" : BaseColor.font} />,\r\n    },\r\n  ]\r\n\r\n  const tab3List = [\r\n    { text: \"Tab 1\", value: \"tab1\", status: \"selected\" },\r\n    { text: \"Tab 2\", value: \"tab2\" },\r\n    { text: \"Tab 3\", value: \"tab3\", status: \"disabled\" },\r\n  ]\r\n\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Tabs</Title>\r\n      <Description>\r\n        Tabs 컴포넌트는 연속적인 Tab으로 구성됩니다. 각각의 Tab은 아이콘이나\r\n        타이틀을 사용하여 상태를 나타낼 수 있습니다. 일반적으로는 선택된 Tab에\r\n        따라 개발자가 원하는 개별적인 상태를 보여주는데 사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={0}>\r\n          <Tabs\r\n            headers={tab1List}\r\n            value={tab1Value}\r\n            onChange={(value, item, index) => {\r\n              setTab1Value(value)\r\n            }}\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const tab1List = [\r\n  { text: \"Tab 1\", value: \"tab1\" },\r\n  { text: \"Tab 2\", value: \"tab2\" },\r\n  { text: \"Tab 3\", value: \"tab3\", status: \"disabled\" },\r\n]\r\nconst [tab1Value, setTab1Value] = useState(tab1List[0].value)\r\n\r\n<Tabs\r\n  headers={tab1List}\r\n  value={tab1Value}\r\n  onChange={(value, item, index) => {\r\n    setTab1Value(value)\r\n  }}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Icon</ComponentTitle>\r\n      <ComponentDescription>\r\n        Tabs를 구성하는 각 Tab에 아이콘을 넣을 수 있습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={0}>\r\n          <Tabs\r\n            headers={tab2List}\r\n            value={tab2Value}\r\n            onChange={(value, item, index) => {\r\n              console.log(item, index)\r\n              setTab2Value(value)\r\n            }}\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const [tab2Value, setTab2Value] = useState(\"bell\")\r\nconst tab2List = [\r\n  {\r\n    text: \"Bell\",\r\n    value: \"bell\",\r\n    icon: <Bell fill={tab2Value === \"bell\" ? \"#fff\" : BaseColor.font} />,\r\n  },\r\n  {\r\n    text: \"Folder\",\r\n    value: \"folder\",\r\n    icon: <Folder fill={tab2Value === \"folder\" ? \"#fff\" : BaseColor.font} />,\r\n  },\r\n  {\r\n    text: \"Cart\",\r\n    value: \"card\",\r\n    icon: <Cart fill={tab2Value === \"card\" ? \"#fff\" : BaseColor.font} />,\r\n  },\r\n]\r\n<Tabs\r\n  headers={tab2List}\r\n  value={tab2Value}\r\n  onChange={(value, item, index) => {\r\n    console.log(item, index)\r\n    setTab2Value(value)\r\n  }}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Type</ComponentTitle>\r\n      <ComponentDescription>\r\n        Tabs를 구성하는 각 Tab의 모서리의 외형을 결정합니다\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={20}>\r\n          <Tabs headers={tab3List} type=\"round\" />\r\n          <Tabs headers={tab3List} type=\"rectangle\" />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Tabs headers={tab3List} type=\"round\" />\r\n<Tabs headers={tab3List} type=\"rectangle\" />`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default TabsPage\r\n","import Layout from \"../../components/Layout\"\r\nimport { Divider, Flex } from \"minimum-ui\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n} = Layout\r\n\r\nconst DividerPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Divider</Title>\r\n      <Description>\r\n        Divider 컴포넌트는 영역을 분리할때 각 영역을 구분짓기 위해 사용합니다.\r\n        각 영역사이 중간에 위치하도록 배치해 사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex>Section1</Flex>\r\n        <Divider />\r\n        <Flex>Section2</Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Divider />`} />\r\n      <ComponentTitle>Size</ComponentTitle>\r\n      <Description>Divider의 굵기를 지정합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Flex>Section1</Flex>\r\n        <Divider size={5} />\r\n        <Flex>Section2</Flex>\r\n        <Divider size={10} />\r\n        <Flex>Section3</Flex>\r\n        <Divider size={15} />\r\n        <Flex>Section4</Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Divider size={5} />\r\n<Divider size={10} />\r\n<Divider size={15} />`}\r\n      />\r\n      <ComponentWrapper>\r\n        <Flex>Section1</Flex>\r\n        <Divider size={5} />\r\n        <Flex>Section2</Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Divider size={5} />`} />\r\n      <ComponentTitle>Color</ComponentTitle>\r\n      <Description>Divider의 색상을 지정합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Flex>Section1</Flex>\r\n        <Divider color=\"#aabbcc\" />\r\n        <Flex>Section2</Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Divider color=\"#aabbcc\" />`} />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default DividerPage\r\n","import React from \"react\"\r\n\r\nimport { Progress, Flex } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst ProgressPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Progress</Title>\r\n      <Description>\r\n        Progress 컴포넌트는 어떤 상황의 진행상태나, 유예를 표현하기위해\r\n        사용합니다. 비율을 입력하여 상태를 표현할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={0}>\r\n          <Progress type={\"linear\"} progress={10} />\r\n          <br />\r\n          <Progress type={\"linear\"} progress={30} />\r\n          <br />\r\n          <Progress type={\"linear\"} progress={50} />\r\n          <br />\r\n          <Progress type={\"linear\"} progress={70} />\r\n          <br />\r\n          <Progress type={\"linear\"} progress={100} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Progress type={\"linear\"} progress={10} />\r\n<Progress type={\"linear\"} progress={30} />\r\n<Progress type={\"linear\"} progress={50} />\r\n<Progress type={\"linear\"} progress={70} />\r\n<Progress type={\"linear\"} progress={100} />\r\n`}\r\n      />\r\n      <ComponentTitle>Type</ComponentTitle>\r\n      <ComponentDescription>\r\n        Progress의 진행상태를 표현할 형태를 지정합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={0}>\r\n          <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n            <Progress type={\"linear\"} progress={30} />\r\n            <Progress type={\"linear\"} progress={60} />\r\n            <Progress type={\"linear\"} progress={90} />\r\n          </Flex>\r\n          <br />\r\n          <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n            <Progress type={\"circle\"} progress={30} />\r\n            <Progress type={\"circle\"} progress={60} />\r\n            <Progress type={\"circle\"} progress={90} />\r\n          </Flex>\r\n          <br />\r\n          <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n            <Progress type={\"circular\"} progress={30} />\r\n            <Progress type={\"circular\"} progress={60} />\r\n            <Progress type={\"circular\"} progress={90} />\r\n          </Flex>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Progress type={\"linear\"} progress={30} />\r\n<Progress type={\"circle\"} progress={30} />\r\n<Progress type={\"circular\"} progress={30} />`}\r\n      />\r\n      <ComponentTitle>Color & Background</ComponentTitle>\r\n      <ComponentDescription>\r\n        Progress 표현에 주요 색과 배경색을 지정합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={0}>\r\n          <Progress\r\n            type={\"linear\"}\r\n            progress={10}\r\n            color=\"red\"\r\n            bgColor=\"#eeeeee\"\r\n          />\r\n          <br />\r\n          <Progress\r\n            type={\"linear\"}\r\n            progress={50}\r\n            color=\"blue\"\r\n            bgColor=\"#aaaaaa\"\r\n          />\r\n          <br />\r\n          <Progress\r\n            type={\"linear\"}\r\n            progress={90}\r\n            color=\"green\"\r\n            bgColor=\"#888888\"\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Progress type={\"linear\"} progress={10} color=\"red\" bgColor=\"#eeeeee\" />\r\n<Progress type={\"linear\"} progress={50} color=\"blue\" bgColor=\"#aaaaaa\" />\r\n<Progress type={\"linear\"} progress={90} color=\"green\" bgColor=\"#888888\" />`}\r\n      />\r\n      <ComponentTitle>Speed</ComponentTitle>\r\n      <ComponentDescription>\r\n        Progress의 회전 속도를 조절합니다. Circular 타입인 경우에만 동작됩니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Progress type={\"circular\"} progress={60} speed={500} />\r\n          <Progress type={\"circular\"} progress={60} />\r\n          <Progress type={\"circular\"} progress={60} speed={3500} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Progress type={\"circular\"} progress={60} speed={500} />\r\n<Progress type={\"circular\"} progress={60} />\r\n<Progress type={\"circular\"} progress={60} speed={3500} />`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default ProgressPage\r\n","import { useState } from \"react\"\r\nimport { Flex, Button, Modal, Typography } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\nimport styled from \"styled-components\"\r\n\r\nconst { ContentsLayout, ComponentWrapper, CodeWrapper, Title, Description } =\r\n  Layout\r\n\r\nconst ModalPage: React.FC = () => {\r\n  const [isOpen, setOpen] = useState(false)\r\n\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Modal</Title>\r\n      <Description>\r\n        Modal 컴포넌트는 페이지에서 웹페이지 내에 알림등을 위한 영역을\r\n        만들어줍니다. 생성된 영역은 body 태그의 하위 요소로 생성됩니다. 영역내\r\n        구성요소는 사용자가 자유롭게 구성해 사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Button\r\n            width=\"120px\"\r\n            variant=\"outline\"\r\n            onClick={() => setOpen(!isOpen)}\r\n          >\r\n            {\"Click Me!\"}\r\n          </Button>\r\n          {isOpen && (\r\n            <Modal\r\n              style={{\r\n                width: \"80%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              onClickOutside={() => setOpen(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>알림</Typography.Title>\r\n                <Typography.Body>기본적인 모달</Typography.Body>\r\n                <Button onClick={() => setOpen(false)}>닫기</Button>\r\n              </Wrapper>\r\n            </Modal>\r\n          )}\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`{isOpen && (\r\n  <Modal\r\n    style={{\r\n      width: \"80%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    }}\r\n    onClickOutside={() => setOpen(false)}\r\n  >\r\n    <Wrapper>\r\n      <Typography.Title>알림</Typography.Title>\r\n      <Typography.Body>기본적인 모달</Typography.Body>\r\n      <Button onClick={() => setOpen(false)}>닫기</Button>\r\n    </Wrapper>\r\n  </Modal>\r\n)}`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default ModalPage\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  max-width: 360px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`\r\n","import React, { useState } from \"react\"\r\n\r\nimport { Collapse, Button, Flex } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\nimport styled from \"styled-components\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst CollapsePage: React.FC = () => {\r\n  const [open1, setOpen1] = useState(false)\r\n  const [open2, setOpen2] = useState(true)\r\n  const [open3, setOpen3] = useState(true)\r\n\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Collapse</Title>\r\n      <Description>\r\n        Collapse 컴포넌트는 영역의 접혀짐과 펼쳐짐을 나타내는 컴포넌트입니다.\r\n        원하는 영역을 숨기거나 나타낼 때 사용할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={10}>\r\n          <Button\r\n            width=\"120px\"\r\n            variant=\"outline\"\r\n            onClick={() => setOpen1(!open1)}\r\n          >\r\n            {\"Click Me!\"}\r\n          </Button>\r\n          <Collapse open={open1}>\r\n            <CollapseOne>Collapse One</CollapseOne>\r\n          </Collapse>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Collapse open={open}>\r\n  <div style={{ width: \"100%\", height: \"100px\", background: \"#dddddd\" }}>\r\n    Collapse One\r\n  </div>\r\n</Collapse>`}\r\n      />\r\n      <ComponentTitle>Speed</ComponentTitle>\r\n      <ComponentDescription>\r\n        Collapse의 열림과 닫힌 상태의 전환 속도를 조절합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={10}>\r\n          <Button\r\n            width=\"120px\"\r\n            variant=\"outline\"\r\n            onClick={() => setOpen2(!open2)}\r\n          >\r\n            {\"Click Me!\"}\r\n          </Button>\r\n          <Collapse open={open2} speed={1000}>\r\n            <CollapseTwo>Collapse Two</CollapseTwo>\r\n          </Collapse>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Collapse open={open} speed={1000}>\r\n  <div style={{ width: \"100%\", height: \"100px\", background: \"#dddddd\" }}>\r\n    Collapse Two\r\n  </div>\r\n</Collapse>`}\r\n      />\r\n      <ComponentTitle>Width</ComponentTitle>\r\n      <ComponentDescription>\r\n        Collapse의 열림/펼침 영역의 너비를 지정합니다. (기본값: 100%)\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" justify=\"center\" gap={10}>\r\n          <Button\r\n            width=\"120px\"\r\n            variant=\"outline\"\r\n            onClick={() => setOpen3(!open3)}\r\n          >\r\n            {\"Click Me!\"}\r\n          </Button>\r\n          <Collapse open={open3} width={200}>\r\n            <CollapseTwo>Collapse Two</CollapseTwo>\r\n          </Collapse>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Collapse open={open} width={200}>\r\n  <div style={{ width: \"100%\", height: \"100px\", background: \"#dddddd\" }}>\r\n    Collapse Two\r\n  </div>\r\n</Collapse>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nconst CollapseOne = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background: #dddddd;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CollapseTwo = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background: #dddddd;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport default CollapsePage\r\n","import { useState } from \"react\"\r\nimport { Flex, Button, Drawer, Typography } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\nimport styled from \"styled-components\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst DrawerPage: React.FC = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const [openLeft, setOpenLeft] = useState(false)\r\n  const [openRight, setOpenRight] = useState(false)\r\n  const [openTop, setOpenTop] = useState(false)\r\n  const [openBottom, setOpenBottom] = useState(false)\r\n  const [openFull, setOpenFull] = useState(false)\r\n  const [open320, setOpen320] = useState(false)\r\n  const [openDefault, setOpenDefault] = useState(false)\r\n\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Drawer</Title>\r\n      <Description>\r\n        Drawer 컴포넌트는 메뉴 혹은 네비게이션 바를 생성하는데 사용하는\r\n        컴포넌트입니다. 평소에는 닫혀있는 상태로 대기하다가 Open 상태로 전환시\r\n        원하는 방향에서 슬라이드되어 나타납니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Button\r\n            width=\"120px\"\r\n            variant=\"outline\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {\"Open Drawer\"}\r\n          </Button>\r\n          {open && (\r\n            <Drawer open={open} onClickOutside={() => setOpen(false)}>\r\n              <Wrapper>\r\n                <Typography.Title>Drawer</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`{open && (\r\n  <Drawer\r\n    open={open}\r\n    onClickOutside={() => setOpen(false)}>\r\n    <div>hello world</div>\r\n  </Drawer>\r\n)}`}\r\n      />\r\n      <ComponentTitle>Direction</ComponentTitle>\r\n      <ComponentDescription>\r\n        Drawer가 슬라이드 되어 배치되는 방향을 지정합니다\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Button variant=\"outline\" onClick={() => setOpenLeft(!open)}>\r\n            {\"Left\"}\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => setOpenRight(!open)}>\r\n            {\"Right\"}\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => setOpenTop(!open)}>\r\n            {\"Top\"}\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => setOpenBottom(!open)}>\r\n            {\"Bottom\"}\r\n          </Button>\r\n          {openLeft && (\r\n            <Drawer\r\n              open={openLeft}\r\n              direction={\"left\"}\r\n              onClickOutside={() => setOpenLeft(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>Left</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n          {openRight && (\r\n            <Drawer\r\n              open={openRight}\r\n              direction={\"right\"}\r\n              onClickOutside={() => setOpenRight(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>Right</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n          {openTop && (\r\n            <Drawer\r\n              open={openTop}\r\n              direction={\"top\"}\r\n              onClickOutside={() => setOpenTop(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>Top</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n          {openBottom && (\r\n            <Drawer\r\n              open={openBottom}\r\n              direction={\"bottom\"}\r\n              onClickOutside={() => setOpenBottom(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>Bottom</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`{openLeft && (\r\n  <Drawer\r\n    open={openLeft}\r\n    direction={\"left\"}\r\n    onClickOutside={() => setOpenLeft(false)}>\r\n    <div>Left</div>\r\n  </Drawer>\r\n)}`}\r\n      />\r\n      <ComponentTitle>Size</ComponentTitle>\r\n      <ComponentDescription>\r\n        Drawer 영역의 크기를 결정합니다. 이때 슬라이드 되는 방향에 따라 너비\r\n        혹은 높이가 결정됩니다. (ex: 상하 - 높이, ex: 좌우 - 너비)\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Button variant=\"outline\" onClick={() => setOpenFull(!open)}>\r\n            {\"Full\"}\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => setOpen320(!open)}>\r\n            {\"320\"}\r\n          </Button>\r\n          <Button variant=\"outline\" onClick={() => setOpenDefault(!open)}>\r\n            {\"default\"}\r\n          </Button>\r\n          {openFull && (\r\n            <Drawer\r\n              open={openFull}\r\n              size={document.querySelector(\"html\")?.clientWidth}\r\n              onClickOutside={() => setOpenFull(false)}\r\n            >\r\n              <Button variant=\"outline\" onClick={() => setOpenFull(false)}>\r\n                {\"Close\"}\r\n              </Button>\r\n              <Wrapper>\r\n                <Typography.Title>Full</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n          {open320 && (\r\n            <Drawer\r\n              open={open320}\r\n              size={320}\r\n              onClickOutside={() => setOpen320(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>320</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n          {openDefault && (\r\n            <Drawer\r\n              open={openDefault}\r\n              onClickOutside={() => setOpenDefault(false)}\r\n            >\r\n              <Wrapper>\r\n                <Typography.Title>default</Typography.Title>\r\n              </Wrapper>\r\n            </Drawer>\r\n          )}\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`{openFull && (\r\n  <Drawer\r\n    open={openFull}\r\n    size={document.querySelector(\"html\")?.clientWidth}\r\n    onClickOutside={() => setOpenFull(false)}\r\n  >\r\n    <div>Full</div>\r\n  </Drawer>\r\n)}`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default DrawerPage\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import styled from \"styled-components\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\nimport { Flex, Typography, Divider, Grid, Button } from \"minimum-ui\"\r\nimport BaseStyle from \"../../assets/styles/base\"\r\n\r\nconst { Title } = Typography\r\n\r\nconst Box: React.CSSProperties = {\r\n  border: `1px solid ${BaseColor.border}`,\r\n  borderRadius: \"4px\",\r\n  padding: \"10px\",\r\n  height: \"300px\",\r\n}\r\n\r\nconst BoxWrapper: React.FC = ({ children }) => {\r\n  return <Flex style={{ padding: \"0 20px\" }}>{children}</Flex>\r\n}\r\n\r\nconst Concept: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <BoxWrapper>\r\n        <Title>Alert</Title>\r\n      </BoxWrapper>\r\n      <BoxWrapper>\r\n        <AlertBox>Information</AlertBox>\r\n        <AlertBox\r\n          style={{\r\n            background: BaseColor.alert.information.background,\r\n            border: `1px solid ${BaseColor.alert.information.border}`,\r\n          }}\r\n        >\r\n          Success\r\n        </AlertBox>\r\n        <AlertBox\r\n          style={{\r\n            background: BaseColor.alert.warning.background,\r\n            border: `1px solid ${BaseColor.alert.warning.border}`,\r\n          }}\r\n        >\r\n          Warning\r\n        </AlertBox>\r\n        <AlertBox\r\n          style={{\r\n            background: BaseColor.alert.error.background,\r\n            border: `1px solid ${BaseColor.alert.error.border}`,\r\n          }}\r\n        >\r\n          Error\r\n        </AlertBox>\r\n      </BoxWrapper>\r\n\r\n      <Divider style={{ margin: \"8px 0\" }} />\r\n\r\n      <BoxWrapper>\r\n        <Title>Button</Title>\r\n      </BoxWrapper>\r\n      <Flex\r\n        direction=\"column\"\r\n        gap={8}\r\n        style={{ padding: \"0 20px\", boxSizing: \"border-box\" }}\r\n      >\r\n        <Button>Full</Button>\r\n        <Flex wrap=\"wrap\">\r\n          <Button width=\"150px\" disabled>\r\n            Disabled\r\n          </Button>\r\n          <Button width=\"150px\" variant=\"text\">\r\n            Text\r\n          </Button>\r\n          <Button width=\"150px\" variant=\"outline\">\r\n            Outline\r\n          </Button>\r\n          <Button width=\"150px\">Default</Button>\r\n          <Button width=\"150px\" variant=\"text\" primary>\r\n            Pirmary Text\r\n          </Button>\r\n          <Button width=\"150px\" variant=\"outline\" primary>\r\n            Pirmary Outline\r\n          </Button>\r\n          <Button width=\"150px\" primary>\r\n            Pirmary Default\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Divider style={{ margin: \"8px 0\" }} />\r\n\r\n      <BoxWrapper>\r\n        <Title>Layout Style</Title>\r\n      </BoxWrapper>\r\n      <Grid\r\n        row={2}\r\n        col={2}\r\n        gap={8}\r\n        style={{\r\n          color: BaseColor.font,\r\n          height: \"300px\",\r\n          padding: BaseStyle.containerPadding,\r\n          fontSize: \"1rem\",\r\n        }}\r\n      >\r\n        <Flex style={Box}>\r\n          안녕하세요 글자테스트입니자 줄바꿈이 잘 되나요? 안되나요?\r\n        </Flex>\r\n        <Flex style={Box}>\r\n          안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요\r\n          안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요\r\n          안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요\r\n        </Flex>\r\n        <Flex style={Box}>1</Flex>\r\n        <Flex style={Box}>1</Flex>\r\n      </Grid>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst AlertBox = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${BaseColor.alert.success.border};\r\n  background-color: ${BaseColor.alert.success.background};\r\n  color: ${BaseColor.font};\r\n  font-size: 1rem;\r\n`\r\n\r\nexport default Concept\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst ArrowLeft: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 492 492\"\r\n      xmlSpace=\"preserve\"\r\n      fill={fill || \"#495057\"}\r\n    >\r\n      <g>\r\n        <path\r\n          d=\"M198.608,246.104L382.664,62.04c5.068-5.056,7.856-11.816,7.856-19.024c0-7.212-2.788-13.968-7.856-19.032l-16.128-16.12\r\n      C361.476,2.792,354.712,0,347.504,0s-13.964,2.792-19.028,7.864L109.328,227.008c-5.084,5.08-7.868,11.868-7.848,19.084\r\n      c-0.02,7.248,2.76,14.028,7.848,19.112l218.944,218.932c5.064,5.072,11.82,7.864,19.032,7.864c7.208,0,13.964-2.792,19.032-7.864\r\n      l16.124-16.12c10.492-10.492,10.492-27.572,0-38.06L198.608,246.104z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ArrowLeft\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  fill?: string\r\n}\r\n\r\nconst ArrowRight: React.FC<Props> = ({ fill }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 492.004 492.004\"\r\n      xmlSpace=\"preserve\"\r\n      fill={fill || \"#495057\"}\r\n    >\r\n      <g>\r\n        <path\r\n          d=\"M382.678,226.804L163.73,7.86C158.666,2.792,151.906,0,144.698,0s-13.968,2.792-19.032,7.86l-16.124,16.12\r\n\t\t\tc-10.492,10.504-10.492,27.576,0,38.064L293.398,245.9l-184.06,184.06c-5.064,5.068-7.86,11.824-7.86,19.028\r\n\t\t\tc0,7.212,2.796,13.968,7.86,19.04l16.124,16.116c5.068,5.068,11.824,7.86,19.032,7.86s13.968-2.792,19.032-7.86L382.678,265\r\n\t\t\tc5.076-5.084,7.864-11.872,7.848-19.088C390.542,238.668,387.754,231.884,382.678,226.804z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ArrowRight\r\n","import { Flex, Button } from \"minimum-ui\"\r\nimport ArrowLeft from \"../../components/Icon/ArrowLeft\"\r\nimport ArrowRight from \"../../components/Icon/ArrowRight\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst ButtonPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Button</Title>\r\n      <Description>\r\n        Button 컴포넌트는 사용자에게 클릭이 가능하고, 클릭을 했을 때 어떤 동작을\r\n        유발한 다는 것을 예측하도록 제공하는 컴포넌트입니다. 클릭 했을 때\r\n        여러가지 임의의 동작을 주입할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex>\r\n          <Button>Default</Button>\r\n          <Button primary>Pirmary</Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button>Default</Button>\r\n<Button primary>Pirmary</Button>`}\r\n      />\r\n      <ComponentTitle>Width</ComponentTitle>\r\n      <Description>\r\n        Button의 너비를 지정합니다. 문자열 형태로 픽셀(0px) 단위나 비율(0%)\r\n        단위를 넣을 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex align=\"flex-start\" direction=\"column\">\r\n          <Button>Button</Button>\r\n          <Button width=\"200px\">Width 200px</Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button>Button</Button>\r\n<Button width=\"200px\">Width 200px</Button>`}\r\n      />\r\n      <ComponentTitle>Size</ComponentTitle>\r\n      <Description>Button의 크기를 지정합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Flex>\r\n          <Button size=\"small\">Small</Button>\r\n          <Button size=\"medium\">Medium</Button>\r\n          <Button size=\"large\">Large</Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button size=\"small\">Small</Button>\r\n<Button size=\"medium\">Medium</Button>\r\n<Button size=\"large\">Large</Button>`}\r\n      />\r\n      <ComponentTitle>Variant</ComponentTitle>\r\n      <Description>\r\n        Button의 다양한 형태를 제공합니다. 각각의 용도에 맞게 활용하면 됩니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex align=\"flex-start\" direction=\"column\">\r\n          <Button>Default</Button>\r\n          <Button variant=\"outline\">Outline</Button>\r\n          <Button variant=\"text\">Text</Button>\r\n          <Button primary>Primary Default</Button>\r\n          <Button variant=\"outline\" primary>\r\n            Primary Outline\r\n          </Button>\r\n          <Button variant=\"text\" primary>\r\n            Primary Text\r\n          </Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button>Default</Button>\r\n<Button variant=\"outline\">Outline</Button>\r\n<Button variant=\"text\">Text</Button>\r\n<Button primary>Primary Default</Button>\r\n<Button variant=\"outline\" primary>Primary Outline</Button>\r\n<Button variant=\"text\" primary>Primary Text</Button>`}\r\n      />\r\n      <ComponentTitle>Loading / Disabled</ComponentTitle>\r\n      <Description>\r\n        Button을 Loading 상태나 Disabled 상태를 표현합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex>\r\n          <Button loading>Loading</Button>\r\n          <Button disabled>Disabled</Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button loading>Loading</Button>\r\n<Button disabled>Disabled</Button>`}\r\n      />\r\n      <ComponentTitle>Icon</ComponentTitle>\r\n      <ComponentDescription>\r\n        Button 텍스트의 왼쪽 혹은 오른쪽에 아이콘을 배치할 수 있습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex>\r\n          <Button leftIcon={<ArrowLeft />} variant=\"outline\">\r\n            Left\r\n          </Button>\r\n          <Button rightIcon={<ArrowRight />} variant=\"outline\">\r\n            Right\r\n          </Button>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Button leftIcon={<ArrowLeft />} variant=\"outline\">Left</Button>\r\n<Button rightIcon={<ArrowRight />} variant=\"outline\">Right</Button>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default ButtonPage\r\n","import { Flex, Table } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst TablePage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Table</Title>\r\n      <Description>\r\n        Table 컴포넌트는 표형식으로 정형화된 데이터를 표현하는데 사용할 수\r\n        있습니다. 이때 구성요소로서 Head, Row, Cell등을 활용헤 다양한 영역을\r\n        구분 지을 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Table>\r\n            <Table.Head>\r\n              <Table.Row>\r\n                <Table.Cell>Job</Table.Cell>\r\n                <Table.Cell>Base Salary</Table.Cell>\r\n                <Table.Cell>Growth</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Head>\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>{\"Nurse\"}</Table.Cell>\r\n                <Table.Cell>{\"$93,203\"}</Table.Cell>\r\n                <Table.Cell>{\"20.33%\"}</Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>{\"Product Owner\"}</Table.Cell>\r\n                <Table.Cell>{\"$90,311\"}</Table.Cell>\r\n                <Table.Cell>{\"103.23\"}</Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>{\"IT Technician\"}</Table.Cell>\r\n                <Table.Cell>{\"$110,264\"}</Table.Cell>\r\n                <Table.Cell>{\"35.16%\"}</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Table>\r\n<Table.Head>\r\n  <Table.Row>\r\n    <Table.Cell>Job</Table.Cell>\r\n    <Table.Cell>Base Salary</Table.Cell>\r\n    <Table.Cell>Growth</Table.Cell>\r\n  </Table.Row>\r\n</Table.Head>\r\n<Table.Body>\r\n  <Table.Row>\r\n    <Table.Cell>{\"Nurse\"}</Table.Cell>\r\n    <Table.Cell>{\"$93,203\"}</Table.Cell>\r\n    <Table.Cell>{\"20.33%\"}</Table.Cell>\r\n  </Table.Row>\r\n  <Table.Row>\r\n    <Table.Cell>{\"Product Owner\"}</Table.Cell>\r\n    <Table.Cell>{\"$90,311\"}</Table.Cell>\r\n    <Table.Cell>{\"103.23\"}</Table.Cell>\r\n  </Table.Row>\r\n  <Table.Row>\r\n    <Table.Cell>{\"IT Technician\"}</Table.Cell>\r\n    <Table.Cell>{\"$110,264\"}</Table.Cell>\r\n    <Table.Cell>{\"35.16%\"}</Table.Cell>\r\n  </Table.Row>\r\n</Table.Body>\r\n</Table>`}\r\n      />\r\n      <ComponentTitle>Ratio</ComponentTitle>\r\n      <ComponentDescription>\r\n        Table의 각 열 비율을 조정할 수 있습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Table ratio={[25, 60, 25]}>\r\n            <Table.Head>\r\n              <Table.Row>\r\n                <Table.Cell>Job</Table.Cell>\r\n                <Table.Cell>Base Salary</Table.Cell>\r\n                <Table.Cell>Growth</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Head>\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>{\"Nurse\"}</Table.Cell>\r\n                <Table.Cell>{\"$93,203\"}</Table.Cell>\r\n                <Table.Cell>{\"20.33%\"}</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Table ratio={[25, 60, 25]}>\r\n  <Table.Head>\r\n    <Table.Row>\r\n      <Table.Cell>Job</Table.Cell>\r\n      <Table.Cell>Base Salary</Table.Cell>\r\n      <Table.Cell>Growth</Table.Cell>\r\n    </Table.Row>\r\n  </Table.Head>\r\n  <Table.Body>\r\n    <Table.Row>\r\n      <Table.Cell>{\"Nurse\"}</Table.Cell>\r\n      <Table.Cell>{\"$93,203\"}</Table.Cell>\r\n      <Table.Cell>{\"20.33%\"}</Table.Cell>\r\n    </Table.Row>\r\n  </Table.Body>\r\n</Table>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default TablePage\r\n","import { Flex, QuickTable } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst QuickTablePage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>QuickTable</Title>\r\n      <Description>\r\n        QuickTable 컴포넌트는 테이블을 그려낼 때 데이터의 요소로만 쉽게 테이블을\r\n        표현할 수 있습니다. 테이블의 헤더, 데이터, 각 행을 그려내는 방법을\r\n        결정하여 제공하면 이를 기반으로 테이블이 완성됩니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <QuickTable\r\n            header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n            data={[\r\n              { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n              { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n              { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n            ]}\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<QuickTable\r\n  header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n  data={[\r\n    { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n    { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n    { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n  ]}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Ratio</ComponentTitle>\r\n      <ComponentDescription>\r\n        테이블을 구성하는 열의 비율을 조정합니다. 이때 0으로 지정시 해당\r\n        데이터는 존재하지만 해당 영역은 나타나지 않습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <QuickTable\r\n            ratio={[0, 10, 10]}\r\n            header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n            data={[\r\n              { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n              { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n              { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n            ]}\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<QuickTable\r\n  ratio={[0, 10, 10]}\r\n  header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n  data={[\r\n    { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n    { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n    { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n  ]}\r\n/>`}\r\n      />\r\n\r\n      <ComponentTitle>Custom Cell</ComponentTitle>\r\n      <ComponentDescription>\r\n        테이블을 구성하는 각각의 셀에 스타일 혹은 원하는 코드를 집어넣어 셀을\r\n        그려낼 수 있습니다. createRow 속성의 매개변수에는 각 행에 해당되는\r\n        객체가 담겨있습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <QuickTable\r\n            header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n            data={[\r\n              { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n              { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n              { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n            ]}\r\n            customHeader={(headers) => [\r\n              <div style={{ backgroundColor: \"red\" }}>{headers[0]}</div>,\r\n              <div style={{ backgroundColor: \"green\" }}>{headers[0]}</div>,\r\n              <div style={{ backgroundColor: \"blue\" }}>{headers[0]}</div>,\r\n            ]}\r\n            customRow={(item) => [\r\n              <div style={{ color: \"red\" }}>{item.name}</div>,\r\n              <div style={{ color: \"green\" }}>{item.phone}</div>,\r\n              <div style={{ color: \"blue\" }}>{item.address}</div>,\r\n            ]}\r\n          />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<QuickTable\r\n  header={[\"Name\", \"Cell Phone\", \"Address\"]}\r\n  data={[\r\n    { name: \"Charles\", phone: \"010-0000-0000\", address: \"Seoul\" },\r\n    { name: \"John\", phone: \"010-1111-1111\", address: \"New York\" },\r\n    { name: \"Alice\", phone: \"010-2222-2222\", address: \"Rome\" },\r\n  ]}\r\n  customRow={(item) => [\r\n    <div style={{ color: \"red\" }}>{item.name}</div>,\r\n    <div style={{ color: \"green\" }}>{item.phone}</div>,\r\n    <div style={{ color: \"blue\" }}>{item.address}</div>,\r\n  ]}\r\n/>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default QuickTablePage\r\n","import { Select } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  ComponentTitle,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n} = Layout\r\n\r\nconst SelectPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Select</Title>\r\n      <Description>\r\n        Select 컴포넌트는 html에서 제공하는 기본 select 태그를 기반으로 만들어져\r\n        있습니다. 사용자에게 하나의 선택 값을 고르도록 할 때 사용합니다. 태그를\r\n        기반으로 작성되었기 때문에 동작하는 플랫폼에 따라 디자인이 달라 질 수\r\n        있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Select\r\n          options={[\r\n            { name: \"first\", value: \"first\" },\r\n            { name: \"second\", value: \"second\" },\r\n            { name: \"third\", value: \"third\" },\r\n            { name: \"forth\", value: \"forth\" },\r\n          ]}\r\n          onChange={(value: string) => console.log(value)}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Select\r\n  options={[\r\n    { name: \"first\", value: \"first\" },\r\n    { name: \"second\", value: \"second\" },\r\n    { name: \"third\", value: \"third\" },\r\n    { name: \"forth\", value: \"forth\" },\r\n  ]}\r\n  onChange={(value) => console.log(value)}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Width</ComponentTitle>\r\n      <Description>Select의 너비를 지정합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Select\r\n          width=\"200px\"\r\n          options={[\r\n            { name: \"first\", value: \"first\" },\r\n            { name: \"second\", value: \"second\" },\r\n            { name: \"third\", value: \"third\" },\r\n            { name: \"forth\", value: \"forth\" },\r\n          ]}\r\n          onChange={(value: string) => console.log(value)}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Select\r\n  width=\"200px\"\r\n  options={[\r\n    { name: \"first\", value: \"first\" },\r\n    { name: \"second\", value: \"second\" },\r\n    { name: \"third\", value: \"third\" },\r\n    { name: \"forth\", value: \"forth\" },\r\n  ]}\r\n  onChange={(value) => console.log(value)}\r\n/>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default SelectPage\r\n","import { Pagination } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  ComponentTitle,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n} = Layout\r\n\r\nconst PaginationPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Pagination</Title>\r\n      <Description>\r\n        Pagination 컴퍼넌트는 게시판등 목록화 하여 각각의 데이터를 페이지로\r\n        순번을 매겨 관리할때 사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Pagination\r\n          currentPage={5}\r\n          pageSize={100}\r\n          onChange={(page: number) => console.log(page)}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Pagination\r\n  currentPage={5}\r\n  pageSize={100}\r\n  onChange={(page) => console.log(page)}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Text</ComponentTitle>\r\n      <Description>\r\n        Pagination의 이전 페이지, 다음 페이지의 구성을 텍스트로 표기할 수\r\n        있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Pagination\r\n          currentPage={7}\r\n          pageSize={20}\r\n          onChange={(page: number) => console.log(page)}\r\n          customButtons={[\"Prev\", \"Next\"]}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Pagination\r\n  currentPage={7}\r\n  pageSize={20}\r\n  onChange={(page) => console.log(page)}\r\n  customButtons={[\"Prev\", \"Next\"]}\r\n/>`}\r\n      />\r\n      <ComponentTitle>Icon</ComponentTitle>\r\n      <Description>\r\n        Pagination의 이전 페이지, 다음 페이지의 구성을 아이콘으로 표기할 수\r\n        있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Pagination\r\n          currentPage={14}\r\n          pageSize={35}\r\n          onChange={(page: number) => console.log(page)}\r\n          customButtons={[<div>{\"<\"}</div>, <div>{\">\"}</div>]}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Pagination\r\n  currentPage={14}\r\n  pageSize={35}\r\n  onChange={(page) => console.log(page)}\r\n  customButtons={[<div>{\"<\"}</div>, <div>{\">\"}</div>]}\r\n/>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default PaginationPage\r\n","import { useState } from \"react\"\r\nimport { Input } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  ComponentTitle,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n} = Layout\r\n\r\nconst InputPage: React.FC = () => {\r\n  const [id, setId] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Input</Title>\r\n      <Description>\r\n        Input 컴포넌트는 html에서 제공하는 기본적인 input 태그를 사용하여 만든\r\n        컴포넌트입니다. 다양한 입력 값을 받을 수 있고, 일반적인 input 태그를\r\n        기반으로 만들어져 있기 때문에 속성들을 그대로 사용 가능합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Input\r\n          value={id}\r\n          placeholder=\"ID\"\r\n          onChange={(value: string) => setId(value)}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const [id, setId] = useState(\"\")\r\n<Input\r\n  value={id}\r\n  onChange={(value) => setId(value)}\r\n  placeholder=\"ID\"\r\n/>`}\r\n      />\r\n      <ComponentTitle>Width</ComponentTitle>\r\n      <Description>Input의 너비를 조정합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Input\r\n          value={password}\r\n          width=\"200px\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(value: string) => setPassword(value)}\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const [password, setPassword] = useState(\"\")\r\n<Input\r\n  value={password}\r\n  width=\"200px\"\r\n  onChange={(value) => setPassword(value)}\r\n  type=\"password\"\r\n  placeholder=\"password\"\r\n/>`}\r\n      />\r\n      <ComponentTitle>title</ComponentTitle>\r\n      <Description>Input에 타이틀을 추가합니다.</Description>\r\n      <ComponentWrapper>\r\n        <Input\r\n          value={id}\r\n          onChange={(value: string) => setId(value)}\r\n          title=\"ID\"\r\n        />\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Input\r\n  value={id}\r\n  onChange={(value) => setId(value)}\r\n  title=\"ID\"\r\n/>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default InputPage\r\n","import { useState } from \"react\"\r\nimport { Flex, Button, Drawer, Menu } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst { ContentsLayout, ComponentWrapper, CodeWrapper, Title, Description } =\r\n  Layout\r\n\r\nconst MenuPage: React.FC = () => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Menu</Title>\r\n      <Description>\r\n        Menu 컴포넌트는 모바일 화면에서 Navagation 역할을 하는 메뉴를 그려낼 때\r\n        사용합니다. 연관된 메뉴를 그룹화할 수 있습니다. 기본적으로 1 depth의\r\n        구조를 가지며, 그룹을 활용하면 최대 2 depth의 메뉴를 구성할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Button onClick={() => setOpen(true)}>Menu</Button>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const [open, setOpen] = useState(false)\r\n\r\n<Drawer\r\n  open={open}\r\n  onClickOutside={() => setOpen(false)}\r\n  direction={\"left\"}\r\n>\r\n  <Menu>\r\n    <Menu.Item selected={false}>Beauty</Menu.Item>\r\n    <Menu.Item selected={false}>Food</Menu.Item>\r\n    <Menu.Item selected={false}>Book</Menu.Item>\r\n    <Menu.Group title=\"Fruit\" open={true}>\r\n      <Menu.Item selected={false}>Apple</Menu.Item>\r\n      <Menu.Item selected={false}>Strawberry</Menu.Item>\r\n      <Menu.Item selected={false}>Banana</Menu.Item>\r\n    </Menu.Group>\r\n  </Menu>\r\n</Drawer>`}\r\n      />\r\n      {open && (\r\n        <Drawer\r\n          open={open}\r\n          onClickOutside={() => setOpen(false)}\r\n          direction={\"left\"}\r\n          // style={{ overflow: \"auto\" }} // 기본 옵션으로 적용할지?\r\n        >\r\n          <Flex>\r\n            <Menu>\r\n              <Menu.Item selected={false}>Beauty</Menu.Item>\r\n              <Menu.Item selected={false}>Food</Menu.Item>\r\n              <Menu.Item selected={false}>Book</Menu.Item>\r\n              <Menu.Group title=\"Fruit\" open={true}>\r\n                <Menu.Item selected={false}>Apple</Menu.Item>\r\n                <Menu.Item selected={false}>Strawberry</Menu.Item>\r\n                <Menu.Item selected={false}>Banana</Menu.Item>\r\n              </Menu.Group>\r\n            </Menu>\r\n          </Flex>\r\n        </Drawer>\r\n      )}\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default MenuPage\r\n","import { Flex, Radio } from \"minimum-ui\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst RadioPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Radio</Title>\r\n      <Description>\r\n        Radio 컴포넌트는 사용자가 클릭 했음과, 하지 않은 상태를 나타낼 수\r\n        있습니다. 이 때 같은 성격의 아이템들을 묶을 수 있도록 그룹도 같이\r\n        제공합니다. 그룹과 함께 사용시 사용자에게 그룹 구성원중 하나만을\r\n        선택하도록 할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Radio title={\"1\"} />\r\n          <Radio title={\"2\"} checked={true} />\r\n          <Radio title={\"3\"} disabled={true} />\r\n          <Radio title={\"4\"} checked={true} disabled={true} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Radio title={\"1\"} />\r\n<Radio title={\"2\"} checked={true} />\r\n<Radio title={\"3\"} disabled={true} />\r\n<Radio title={\"4\"} checked={true} disabled={true} />`}\r\n      />\r\n      <ComponentTitle>Direction</ComponentTitle>\r\n      <ComponentDescription>\r\n        Radio의 타이틀 위치를 결정합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Radio title={\"Right\"} checked={true} />\r\n          <Radio title={\"Top\"} checked={true} direction={\"top\"} />\r\n          <Radio title={\"Bottom\"} checked={true} direction={\"bottom\"} />\r\n          <Radio title={\"Left\"} checked={true} direction={\"left\"} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Radio title={\"Right\"} checked={true} />\r\n<Radio title={\"Top\"} checked={true} direction={\"top\"} />\r\n<Radio title={\"Bottom\"} checked={true} direction={\"bottom\"} />\r\n<Radio title={\"Left\"} checked={true} direction={\"left\"} />`}\r\n      />\r\n      <ComponentTitle>Color</ComponentTitle>\r\n      <ComponentDescription>Radio의 색상을 지정합니다</ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Radio title={\"Title 1\"} checked={true} color={BaseColor.primary} />\r\n          <Radio title={\"Title 2\"} color={BaseColor.primary} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Radio title={\"Title 1\"} checked={true} color=\"#3b5bdb\" />\r\n<Radio title={\"Title 2\"} color=\"#3b5bdb\" />`}\r\n      />\r\n      <ComponentTitle>Size</ComponentTitle>\r\n      <ComponentDescription>Radio의 크기를 지정합니다.</ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Radio size=\"small\" checked={true} />\r\n          <Radio size=\"medium\" checked={true} />\r\n          <Radio size=\"large\" checked={true} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Radio size=\"small\" checked={true} />\r\n<Radio size=\"medium\" checked={true} />\r\n<Radio size=\"large\" checked={true} />`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default RadioPage\r\n","import { Checkbox, Flex } from \"minimum-ui\"\r\n\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst CheckboxPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Checkbox</Title>\r\n      <Description>\r\n        Checkbox 컴포넌트는 체크의 유무를 표현하는 컴포넌트입니다. 복수의\r\n        Checkbox 컴포넌트를 활용하여 어떤 상황에 옵션을 표현하는데 사용할 수\r\n        있고, 단일 Checkbox를 사용해 어떤 기능이나 동작의 on/off를 구분하는데도\r\n        활용할 수 있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Checkbox checked={true} />\r\n          <Checkbox checked={false} />\r\n          <Checkbox checked={true} disabled />\r\n          <Checkbox checked={false} disabled />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Checkbox checked={true} />\r\n<Checkbox checked={false} />\r\n<Checkbox checked={true} disabled />\r\n<Checkbox checked={false} disabled />`}\r\n      />\r\n      <ComponentTitle>Direction</ComponentTitle>\r\n      <ComponentDescription>\r\n        Checkbox의 타이틀 위치를 결정합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Checkbox title=\"Right\" checked={true} />\r\n          <Checkbox title=\"Top\" checked={true} direction={\"top\"} />\r\n          <Checkbox title=\"Bottom\" checked={true} direction={\"bottom\"} />\r\n          <Checkbox title=\"Left\" checked={true} direction={\"left\"} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Checkbox title=\"Right\" checked={true} />\r\n<Checkbox title=\"Top\" checked={true} direction={\"top\"} />\r\n<Checkbox title=\"Bottom\" checked={true} direction={\"bottom\"} />\r\n<Checkbox title=\"Left\" checked={true} direction={\"left\"} />`}\r\n      />\r\n      <ComponentTitle>Size</ComponentTitle>\r\n      <ComponentDescription>Checkbox의 크기를 지정합니다.</ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Flex direction=\"row\" justify=\"center\" gap={20}>\r\n          <Checkbox size=\"small\" checked={true} />\r\n          <Checkbox size=\"medium\" checked={true} />\r\n          <Checkbox size=\"large\" checked={true} />\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Checkbox size=\"small\" checked={true} />\r\n<Checkbox size=\"medium\" checked={true} />\r\n<Checkbox size=\"large\" checked={true} />`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default CheckboxPage\r\n","import { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { Button, Flex, Grid, Typography } from \"minimum-ui\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\nimport { Footer } from \"../../components\"\r\nimport { sortedComponents } from \"../../components/ComponentBox\"\r\n\r\nconst OverviewPage: React.FC = () => {\r\n  const history = useHistory()\r\n  const names = Object.keys(sortedComponents)\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      gap={0}\r\n      style={{ height: \"100%\", userSelect: \"none\" }}\r\n    >\r\n      <LogoWrapper>\r\n        <Typography.SubTitle>github</Typography.SubTitle>\r\n        <Typography.SubTitle>npm</Typography.SubTitle>\r\n      </LogoWrapper>\r\n      <BoardWrapper>\r\n        <Brand>Minimum UI</Brand>\r\n        <BrandDescription>\r\n          가장 기본적인 것만 필요할 때, 최소한의 구성으로 화면을 만들어보세요.\r\n        </BrandDescription>\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"#fff\"\r\n          width=\"100px\"\r\n          onClick={() => history.push(\"/button\")}\r\n        >\r\n          시작하기\r\n        </Button>\r\n      </BoardWrapper>\r\n      <ComponentDescription>\r\n        <Typography.Body style={{ fontWeight: 100 }}>\r\n          현재까지 제공중인 컴포넌트 리스트\r\n        </Typography.Body>\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Grid style={{ width: \"400px\", height: \"250px\" }} col={4} row={8}>\r\n          {names.map((name) => (\r\n            <ComponentName key={name}>{name}</ComponentName>\r\n          ))}\r\n        </Grid>\r\n      </ComponentWrapper>\r\n      <Footer />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0 20px;\r\n  color: ${BaseColor.font};\r\n\r\n  div ~ div {\r\n    margin-left: 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst BoardWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  width: 100%;\r\n  background: ${BaseColor.primary};\r\n  color: #fff;\r\n  font-family: \"NanumGothicLight\";\r\n`\r\n\r\nconst Brand = styled.span`\r\n  font-size: 3.5rem;\r\n  line-height: 3.5rem;\r\n  margin-top: 70px;\r\n  font-family: \"Montserrat\";\r\n  font-weight: 900;\r\n`\r\n\r\nconst BrandDescription = styled.span`\r\n  margin-top: 10px;\r\n  margin-bottom: 30px;\r\n  padding: 0 10px;\r\n  text-align: center;\r\n  line-height: 1.5rem;\r\n`\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`\r\n\r\nconst ComponentDescription = styled.span`\r\n  font-size: 1rem;\r\n  margin: 20px 0;\r\n  color: ${BaseColor.font};\r\n`\r\n\r\nconst ComponentName = styled.span`\r\n  font-size: 1rem;\r\n  font-family: \"NanumGothicLight\";\r\n  color: ${BaseColor.font};\r\n`\r\n\r\nexport default OverviewPage\r\n","import Layout from \"../../components/Layout\"\r\nimport { Grid } from \"minimum-ui\"\r\nimport styled from \"styled-components\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\n\r\nconst { ContentsLayout, ComponentWrapper, CodeWrapper, Title, Description } =\r\n  Layout\r\n\r\nconst GridPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Grid</Title>\r\n      <Description>\r\n        Grid 컴포넌트는 자식 구성요소들의 배치를 결정하는 컴포넌트입니다.\r\n        구성요소는 격자모양의 형태로 순서대로 좌측에서 우측으로 위에서 아래로\r\n        요소 하나하나씩 배치됩니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Grid row={2} col={2} gap={8}>\r\n          <Box>GRID1</Box>\r\n          <Box>GRID2</Box>\r\n          <Box>GRID3</Box>\r\n          <Box>GRID4</Box>\r\n        </Grid>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Grid row={2} col={2} gap={8}>\r\n  <Box>GRID1</Box>\r\n  <Box>GRID2</Box>\r\n  <Box>GRID3</Box>\r\n  <Box>GRID4</Box>\r\n</Grid>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: ${BaseColor.border};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport default GridPage\r\n","import Layout from \"../../components/Layout\"\r\nimport { Flex } from \"minimum-ui\"\r\nimport styled from \"styled-components\"\r\nimport { BaseColor } from \"../../assets/styles/color\"\r\n\r\nconst { ContentsLayout, ComponentWrapper, CodeWrapper, Title, Description } =\r\n  Layout\r\n\r\nconst FlexPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Flex</Title>\r\n      <Description>\r\n        Flex 컴포넌트는 자식 구성요소들의 배치를 결정하는 컴포넌트입니다. 각\r\n        구성 영역의 사이즈를 조정할 수 있고, 배치되는 방향성도 결정할 수\r\n        있습니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Flex>\r\n          <Box style={{ flex: 1 }}>FLEX1</Box>\r\n          <Box style={{ flex: 2 }}>FLEX2</Box>\r\n          <Box style={{ flex: 1 }}>FLEX3</Box>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Flex>\r\n  <Box style={{ flex: 1 }}>FLEX1</Box>\r\n  <Box style={{ flex: 2 }}>FLEX2</Box>\r\n  <Box style={{ flex: 1 }}>FLEX3</Box>\r\n</Flex>`}\r\n      />\r\n      <ComponentWrapper>\r\n        <Flex direction=\"column\" style={{ height: \"300px\" }}>\r\n          <Box style={{ flex: 2, height: \"auto\" }}>FLEX1</Box>\r\n          <Box style={{ flex: 1, height: \"auto\" }}>FLEX2</Box>\r\n          <Box style={{ flex: 3, height: \"auto\" }}>FLEX3</Box>\r\n          <Box style={{ flex: 1, height: \"auto\" }}>FLEX4</Box>\r\n          <Box style={{ flex: 2, height: \"auto\" }}>FLEX5</Box>\r\n        </Flex>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`<Flex direction=\"column\" style={{ height: \"300px\" }}>\r\n  <Box style={{ flex: 2, height: \"auto\" }}>FLEX1</Box>\r\n  <Box style={{ flex: 1, height: \"auto\" }}>FLEX2</Box>\r\n  <Box style={{ flex: 3, height: \"auto\" }}>FLEX3</Box>\r\n  <Box style={{ flex: 1, height: \"auto\" }}>FLEX4</Box>\r\n  <Box style={{ flex: 2, height: \"auto\" }}>FLEX5</Box>\r\n</Flex>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: ${BaseColor.border};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport default FlexPage\r\n","import { Typography } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst { Title, SubTitle, Body, Caption } = Typography\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title: LayoutTitle,\r\n  Description,\r\n  ComponentTitle,\r\n} = Layout\r\n\r\nconst TypographyPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <LayoutTitle>Typography</LayoutTitle>\r\n      <Description>\r\n        Typography 컴포넌트는 다양한 텍스트 조합을 사용해 문서를 구성하는데\r\n        사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Title>Example of Typography</Title>\r\n        <SubTitle>Example of Typography</SubTitle>\r\n        <Body>Example of Typography</Body>\r\n        <Caption>Example of Typography</Caption>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const { Title, SubTitle, Body, Caption } = Typography\r\n        \r\n<Title>Example of Typography</Title>\r\n<SubTitle>Example of Typography</SubTitle>\r\n<Body>Example of Typography</Body>\r\n<Caption>Example of Typography</Caption>\r\n\r\n<Typography.Title>Example of Typography</Typography.Title>\r\n<Typography.SubTitle>Example of Typography</Typography.SubTitle>\r\n<Typography.Body>Example of Typography</Typography.Body>\r\n<Typography.Caption>Example of Typography</Typography.Caption>`}\r\n      />\r\n      <ComponentTitle>Style</ComponentTitle>\r\n      <Description>\r\n        Typography 에 개별적인 스타일을 주입합니다. 이때 일반적인 태그의\r\n        스타일을 사용합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Title style={{ color: \"red\" }}>Example of Typography</Title>\r\n        <SubTitle style={{ textDecoration: \"line-through\" }}>\r\n          Example of Typography\r\n        </SubTitle>\r\n        <Body style={{ padding: \"10px\" }}>Example of Typography</Body>\r\n        <Caption style={{ letterSpacing: 3 }}>Example of Typography</Caption>\r\n      </ComponentWrapper>\r\n      <CodeWrapper\r\n        code={`const { Title, SubTitle, Body, Caption } = Typography\r\n\r\n<Title style={{ color: \"red\" }}>Example of Typography</Title>\r\n<SubTitle style={{ textDecoration: \"line-through\" }}>Example of Typography</SubTitle>\r\n<Body style={{ padding: \"10px\" }}>Example of Typography</Body>\r\n<Caption style={{ letterSpacing: 3 }}>Example of Typography</Caption>`}\r\n      />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default TypographyPage\r\n","import { Textarea } from \"minimum-ui\"\r\nimport Layout from \"../../components/Layout\"\r\n\r\nconst {\r\n  ContentsLayout,\r\n  ComponentWrapper,\r\n  CodeWrapper,\r\n  Title,\r\n  Description,\r\n  ComponentTitle,\r\n  ComponentDescription,\r\n} = Layout\r\n\r\nconst TextareaPage: React.FC = () => {\r\n  return (\r\n    <ContentsLayout>\r\n      <Title>Textarea</Title>\r\n      <Description>\r\n        Textarea 컴포넌트는 텍스트 입력시 여러 줄을 입력할 수 있는 영역을\r\n        표현합니다.\r\n      </Description>\r\n      <ComponentWrapper>\r\n        <Textarea placeholder=\"default width\" />\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Textarea />`} />\r\n      <ComponentTitle>Width / Cols</ComponentTitle>\r\n      <ComponentDescription>\r\n        Textarea의 너비를 지정합니다. 두 속성 같이 사용 시 width 속성이 우선\r\n        적용되며, cols 옵션 사용시 width 옵션은 적용되지 않습니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Textarea width=\"200px\" placeholder=\"width 200px\" />\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Textarea width=\"200px\" />`} />\r\n      <ComponentWrapper>\r\n        <Textarea cols={200} placeholder=\"cols 200\" />\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Textarea cols={200} />`} />\r\n      <ComponentTitle>Rows</ComponentTitle>\r\n      <ComponentDescription>\r\n        Textarea의 높이를 지정합니다. 이때 높이는 자연수를 사용하며 이는 각 행에\r\n        들어갈 텍스트의 행을 의미합니다.\r\n      </ComponentDescription>\r\n      <ComponentWrapper>\r\n        <Textarea placeholder=\"rows 10\" rows={10} />\r\n      </ComponentWrapper>\r\n      <CodeWrapper code={`<Textarea rows={10} />`} />\r\n    </ContentsLayout>\r\n  )\r\n}\r\n\r\nexport default TextareaPage\r\n","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Flex, Menu, Drawer } from \"minimum-ui\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\n\r\nimport useStatus from \"../../hooks/useStatus\"\r\nimport components, { ComponentProps } from \"../../assets/components\"\r\nimport { replacePathname } from \"../../lib/path\"\r\n\r\nconst sortedComponents = (() => {\r\n  const names = Object.keys(components)\r\n  names.sort()\r\n  let newComponentSet: ComponentProps = {}\r\n  names.forEach((name) => {\r\n    newComponentSet[name] = components[name]\r\n  })\r\n  return newComponentSet\r\n})()\r\n\r\nconst Header: React.FC = () => {\r\n  const history = useHistory()\r\n  const names = Object.keys(sortedComponents)\r\n  const { isLeftMenu, setLeftMenu, selectedMenu, setSelectedMenu } = useStatus()\r\n\r\n  useEffect(() => {\r\n    if (history) {\r\n      history.listen(() => {\r\n        const path = replacePathname(window.location.pathname).slice(1)\r\n        setSelectedMenu({\r\n          id: path,\r\n          url: window.location.pathname,\r\n        })\r\n      })\r\n    }\r\n  }, [history, setSelectedMenu])\r\n\r\n  const createMenus = () => {\r\n    return names.map((menuName, index) => {\r\n      const id = `menu-${index}`\r\n      const url = `/minimum-ui/${menuName}`\r\n      return (\r\n        <StyledLink\r\n          key={id}\r\n          to={url}\r\n          onClick={() => {\r\n            setSelectedMenu({\r\n              id: menuName,\r\n              url: url,\r\n            })\r\n          }}\r\n        >\r\n          <Menu.Item selected={url === selectedMenu?.url}>\r\n            {sortedComponents[menuName].displayName}\r\n          </Menu.Item>\r\n        </StyledLink>\r\n      )\r\n    })\r\n  }\r\n  return (\r\n    <Drawer\r\n      open={!!isLeftMenu}\r\n      onClickOutside={() => setLeftMenu(false)}\r\n      direction={\"left\"}\r\n    >\r\n      <Wrapper>\r\n        <Flex>\r\n          <Menu>{createMenus()}</Menu>\r\n        </Flex>\r\n      </Wrapper>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  background: #ffffff;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport default Header\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\n\r\nimport {\r\n  Tabs,\r\n  DividerPage,\r\n  Progress,\r\n  Modal,\r\n  Collapse,\r\n  DrawerPage,\r\n  ConceptPage,\r\n  ButtonPage,\r\n  TablePage,\r\n  SelectPage,\r\n  PaginationPage,\r\n  InputPage,\r\n  MenuPage,\r\n  RadioPage,\r\n  CheckboxPage,\r\n  OverviewPage,\r\n  QuickTablePage,\r\n  GridPage,\r\n  FlexPage,\r\n} from \"./pages\"\r\nimport TypographyPage from \"./pages/Typography\"\r\nimport TextareaPage from \"./pages/Textarea\"\r\nimport \"./assets/styles/reset.css\"\r\nimport { StatusContext } from \"./contexts/StatusContext\"\r\nimport DrawerMenu from \"./components/DrawerMenu\"\r\nimport { replacePathname } from \"./lib/path\"\r\n\r\nfunction App() {\r\n  const path = replacePathname(window.location.pathname).slice(1)\r\n  const [selectedMenu, setSelectedMenu] = useState({\r\n    id: path,\r\n    url: window.location.pathname,\r\n  })\r\n  const [isLeftMenu, setLeftMenu] = useState(false)\r\n  return (\r\n    <>\r\n      <StatusContext.Provider\r\n        value={{ selectedMenu, isLeftMenu, setSelectedMenu, setLeftMenu }}\r\n      >\r\n        <Router basename=\"/minimum-ui\">\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <OverviewPage />\r\n            </Route>\r\n            <Route path=\"/tabs\" exact>\r\n              <Tabs />\r\n            </Route>\r\n            <Route path=\"/progress\" exact>\r\n              <Progress />\r\n            </Route>\r\n            <Route path=\"/divider\" exact>\r\n              <DividerPage />\r\n            </Route>\r\n            <Route path=\"/flex\" exact>\r\n              <FlexPage />\r\n            </Route>\r\n            <Route path=\"/grid\" exact>\r\n              <GridPage />\r\n            </Route>\r\n            <Route path=\"/typography\" exact>\r\n              <TypographyPage />\r\n            </Route>\r\n            <Route path=\"/modal\" exact>\r\n              <Modal />\r\n            </Route>\r\n            <Route path=\"/collapse\" exact>\r\n              <Collapse />\r\n            </Route>\r\n            <Route path=\"/concept\" exact>\r\n              <ConceptPage />\r\n            </Route>\r\n            <Route path=\"/button\" exact>\r\n              <ButtonPage />\r\n            </Route>\r\n            <Route path=\"/textarea\" exact>\r\n              <TextareaPage />\r\n            </Route>\r\n            <Route path=\"/drawer\" exact>\r\n              <DrawerPage />\r\n            </Route>\r\n            <Route path=\"/table\" exact>\r\n              <TablePage />\r\n            </Route>\r\n            <Route path=\"/quicktable\" exact>\r\n              <QuickTablePage />\r\n            </Route>\r\n            <Route path=\"/select\" exact>\r\n              <SelectPage />\r\n            </Route>\r\n            <Route path=\"/pagination\" exact>\r\n              <PaginationPage />\r\n            </Route>\r\n            <Route path=\"/input\" exact>\r\n              <InputPage />\r\n            </Route>\r\n            <Route path=\"/menu\" exact>\r\n              <MenuPage />\r\n            </Route>\r\n            <Route path=\"/radio\" exact>\r\n              <RadioPage />\r\n            </Route>\r\n            <Route path=\"/checkbox\" exact>\r\n              <CheckboxPage />\r\n            </Route>\r\n          </Switch>\r\n          <DrawerMenu />\r\n        </Router>\r\n      </StatusContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}